<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='bating_cleaned.csv+ (Multiple Connections)' inline='true' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bating_cleaned' name='textscan.0obb7k81itbuj71deahpx1s60km6'>
            <connection class='textscan' directory='C:/Users/Tanay Soni/Desktop/Rutgers 1 Sem/DAV/Final Project' filename='bating_cleaned.csv' password='' server='' />
          </named-connection>
          <named-connection caption='bowling_cleaned' name='textscan.1swz42n0pobgqd149zvji09nzo4k'>
            <connection class='textscan' directory='C:/Users/Tanay Soni/Desktop/Rutgers 1 Sem/DAV/Final Project' filename='bowling_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0obb7k81itbuj71deahpx1s60km6' name='bating_cleaned.csv' table='[bating_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='string' name='Type' ordinal='3' />
            <column datatype='integer' name='M' ordinal='4' />
            <column datatype='integer' name='Inn' ordinal='5' />
            <column datatype='integer' name='NO' ordinal='6' />
            <column datatype='integer' name='Runs' ordinal='7' />
            <column datatype='integer' name='HS' ordinal='8' />
            <column datatype='real' name='Avg' ordinal='9' />
            <column datatype='integer' name='BF' ordinal='10' />
            <column datatype='real' name='SR' ordinal='11' />
            <column datatype='integer' name='X4s' ordinal='12' />
            <column datatype='integer' name='X6s' ordinal='13' />
            <column datatype='integer' name='X50' ordinal='14' />
            <column datatype='integer' name='X100' ordinal='15' />
            <column datatype='integer' name='X200' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0obb7k81itbuj71deahpx1s60km6' name='bating_cleaned.csv' table='[bating_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Team' ordinal='2' />
              <column datatype='string' name='Type' ordinal='3' />
              <column datatype='integer' name='M' ordinal='4' />
              <column datatype='integer' name='Inn' ordinal='5' />
              <column datatype='integer' name='NO' ordinal='6' />
              <column datatype='integer' name='Runs' ordinal='7' />
              <column datatype='integer' name='HS' ordinal='8' />
              <column datatype='real' name='Avg' ordinal='9' />
              <column datatype='integer' name='BF' ordinal='10' />
              <column datatype='real' name='SR' ordinal='11' />
              <column datatype='integer' name='X4s' ordinal='12' />
              <column datatype='integer' name='X6s' ordinal='13' />
              <column datatype='integer' name='X50' ordinal='14' />
              <column datatype='integer' name='X100' ordinal='15' />
              <column datatype='integer' name='X200' ordinal='16' />
            </columns>
          </relation>
          <relation connection='textscan.0obb7k81itbuj71deahpx1s60km6' name='bowling_cleaned.csv' table='[bowling_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Team' ordinal='2' />
              <column datatype='string' name='Type' ordinal='3' />
              <column datatype='integer' name='M' ordinal='4' />
              <column datatype='integer' name='Inn' ordinal='5' />
              <column datatype='integer' name='B' ordinal='6' />
              <column datatype='integer' name='Runs' ordinal='7' />
              <column datatype='integer' name='Wkts' ordinal='8' />
              <column datatype='real' name='Econ' ordinal='9' />
              <column datatype='real' name='Avg' ordinal='10' />
              <column datatype='real' name='SR' ordinal='11' />
              <column datatype='integer' name='X5W' ordinal='12' />
              <column datatype='integer' name='X10W' ordinal='13' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Avg (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Avg]' />
          <map key='[Avg]' value='[bating_cleaned.csv].[Avg]' />
          <map key='[BF]' value='[bating_cleaned.csv].[BF]' />
          <map key='[B]' value='[bowling_cleaned.csv].[B]' />
          <map key='[Econ]' value='[bowling_cleaned.csv].[Econ]' />
          <map key='[F1 (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[F1]' />
          <map key='[F1]' value='[bating_cleaned.csv].[F1]' />
          <map key='[HS]' value='[bating_cleaned.csv].[HS]' />
          <map key='[Inn (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Inn]' />
          <map key='[Inn]' value='[bating_cleaned.csv].[Inn]' />
          <map key='[M (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[M]' />
          <map key='[M]' value='[bating_cleaned.csv].[M]' />
          <map key='[NO]' value='[bating_cleaned.csv].[NO]' />
          <map key='[Player (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Player]' />
          <map key='[Player]' value='[bating_cleaned.csv].[Player]' />
          <map key='[Runs (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Runs]' />
          <map key='[Runs]' value='[bating_cleaned.csv].[Runs]' />
          <map key='[SR (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[SR]' />
          <map key='[SR]' value='[bating_cleaned.csv].[SR]' />
          <map key='[Team (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Team]' />
          <map key='[Team]' value='[bating_cleaned.csv].[Team]' />
          <map key='[Type (bowling_cleaned.csv)]' value='[bowling_cleaned.csv].[Type]' />
          <map key='[Type]' value='[bating_cleaned.csv].[Type]' />
          <map key='[Wkts]' value='[bowling_cleaned.csv].[Wkts]' />
          <map key='[X100]' value='[bating_cleaned.csv].[X100]' />
          <map key='[X10W]' value='[bowling_cleaned.csv].[X10W]' />
          <map key='[X200]' value='[bating_cleaned.csv].[X200]' />
          <map key='[X4s]' value='[bating_cleaned.csv].[X4s]' />
          <map key='[X50]' value='[bating_cleaned.csv].[X50]' />
          <map key='[X5W]' value='[bowling_cleaned.csv].[X5W]' />
          <map key='[X6s]' value='[bating_cleaned.csv].[X6s]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M</remote-name>
            <remote-type>20</remote-type>
            <local-name>[M]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>M</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inn]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Inn</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NO]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>NO</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runs]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Runs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HS]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>HS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>Avg</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BF]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>BF</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SR]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>SR</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X4s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X4s]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>X4s</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X6s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X6s]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>X6s</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X50</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X50]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>X50</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X100</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X100]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>X100</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X200</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X200]</local-name>
            <parent-name>[bating_cleaned.csv]</parent-name>
            <remote-alias>X200</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M</remote-name>
            <remote-type>20</remote-type>
            <local-name>[M (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>M</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inn (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Inn</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B</remote-name>
            <remote-type>20</remote-type>
            <local-name>[B]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>B</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runs (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Runs</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wkts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wkts]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Wkts</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Econ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Econ]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Econ</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>Avg</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SR (bowling_cleaned.csv)]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>SR</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X5W</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X5W]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>X5W</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X10W</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X10W]</local-name>
            <parent-name>[bowling_cleaned.csv]</parent-name>
            <remote-alias>X10W</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR:qk]&quot;' value='SR' />
          <alias key='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn:qk]&quot;' value='Inn' />
          <alias key='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]&quot;' value='M' />
        </aliases>
      </column>
      <column caption='Average ' datatype='real' name='[Avg (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column caption='Balls Faced' datatype='integer' name='[BF]' role='measure' type='quantitative' />
      <column caption='Balls' datatype='integer' name='[B]' role='measure' type='quantitative' />
      <column caption='Economy' datatype='real' name='[Econ]' role='measure' type='quantitative' />
      <column caption='F1 (bowling cleaned.csv)' datatype='integer' name='[F1 (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column caption='Highest Score' datatype='integer' name='[HS]' role='measure' type='quantitative' />
      <column caption='Innings' datatype='integer' name='[Inn (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column caption='Innings Bat' datatype='integer' name='[Inn]' role='measure' type='quantitative' />
      <column caption='Matches' datatype='integer' name='[M (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column caption='Matches Played' datatype='integer' name='[M]' role='measure' type='quantitative' />
      <column caption='Not Out' datatype='integer' name='[NO]' role='measure' type='quantitative' />
      <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column caption='Runs Given' datatype='integer' name='[Runs (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
      <column caption='Strike Rate Bowl' datatype='real' name='[SR (bowling_cleaned.csv)]' role='measure' type='quantitative' />
      <column caption='Strike Rate' datatype='real' name='[SR]' role='measure' type='quantitative' />
      <column caption='Team Bowl' datatype='string' name='[Team (bowling_cleaned.csv)]' role='dimension' type='nominal' />
      <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
      <column caption='100' datatype='integer' name='[X100]' role='measure' type='quantitative' />
      <column caption='10W' datatype='integer' name='[X10W]' role='measure' type='quantitative' />
      <column caption='200' datatype='integer' name='[X200]' role='measure' type='quantitative' />
      <column caption='4s' datatype='integer' name='[X4s]' role='measure' type='quantitative' />
      <column caption='50' datatype='integer' name='[X50]' role='measure' type='quantitative' />
      <column caption='5W' datatype='integer' name='[X5W]' role='measure' type='quantitative' />
      <column caption='6s' datatype='integer' name='[X6s]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='bating_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='bowling_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050]' role='measure' type='quantitative' />
      <column-instance column='[SR]' derivation='Attribute' name='[attr:SR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg (bowling_cleaned.csv)]' derivation='Avg' name='[avg:Avg (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR (bowling_cleaned.csv)]' derivation='Avg' name='[avg:SR (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR]' derivation='Avg' name='[avg:SR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR]' derivation='Count' name='[cnt:SR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg (bowling_cleaned.csv)]' derivation='None' name='[none:Avg (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Econ]' derivation='None' name='[none:Econ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wkts]' derivation='None' name='[none:Wkts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg (bowling_cleaned.csv)]' derivation='Sum' name='[sum:Avg (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[BF]' derivation='Sum' name='[sum:BF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Econ]' derivation='Sum' name='[sum:Econ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inn (bowling_cleaned.csv)]' derivation='Sum' name='[sum:Inn (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inn]' derivation='Sum' name='[sum:Inn:qk]' pivot='key' type='quantitative' />
      <column-instance column='[M (bowling_cleaned.csv)]' derivation='Sum' name='[sum:M (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[M]' derivation='Sum' name='[sum:M:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR (bowling_cleaned.csv)]' derivation='Sum' name='[sum:SR (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SR]' derivation='Sum' name='[sum:SR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wkts]' derivation='Sum' name='[sum:Wkts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X100]' derivation='Sum' name='[sum:X100:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X10W]' derivation='Sum' name='[sum:X10W:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X200]' derivation='Sum' name='[sum:X200:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X4s]' derivation='Sum' name='[sum:X4s:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X50]' derivation='Sum' name='[sum:X50:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X5W]' derivation='Sum' name='[sum:X5W:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X6s]' derivation='Sum' name='[sum:X6s:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Player (bowling cleaned.csv))' hidden='true' name='[Action (Player (bowling cleaned.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))' hidden='true' name='[Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' />
          <groupfilter function='level-members' level='[Type (bowling_cleaned.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Player Bowl)' hidden='true' name='[Action (Player Bowl)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Player)' hidden='true' name='[Action (Player)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Player (bowling_cleaned.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Andile Phehlukwayo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cheteshwar Pujara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eoin Morgan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kemar Roach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marnus Labuschagne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinton de Kock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shadab Khan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Murtagh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Finch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben Stokes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;David Warner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardik Pandya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Burns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lockie Ferguson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moeen Ali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nuwan Pradeep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sabbir Rahman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Soumya Sarkar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wahab Riaz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aftab Alam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Taylor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dimuth Karunaratne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hazratullah Zazai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jos Buttler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manish Pandey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohammad Mithun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Stirling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sanju Samson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tabraiz Shamsi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuzvendra Chahal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andy McBrine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Mpofu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fakhar Zaman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James Neesham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kusal Mendis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matthew Wade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mujeeb Ur Rahman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ravichandran Ashwin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shannon Gabriel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tom Blundell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andre Russell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Gayle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Evin Lewis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ish Sodhi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kevin O Brien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martin Guptill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rahmat Shah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shaheen Afridi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Paine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aiden Markram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brian Chari&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Donald Tiripano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry Nicholls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Josh Hazlewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marcus Stoinis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Chase&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sarfaraz Ahmed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamim Iqbal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Babar Azam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Bravo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton Masakadza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeevan Mendis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liam Livingstone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mitchell Starc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicholas Pooran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ross Taylor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sikandar Raza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Umesh Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abu Jayed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beuran Hendricks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dawid Malan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haris Sohail&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Root&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lorcan Tucker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohammad Amir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olly Stone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sam Billings&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steven Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Will Pucovski&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asif Ali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Ervine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gulbadin Naib&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jasprit Bumrah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lasith Malinga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milinda Siriwardana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nathan Lyon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rishabh Pant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shreyas Iyer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trent Boult&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ajinkya Rahane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameron Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dwaine Pretorius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Imad Wasim&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kagiso Rabada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mark Adair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mohammad Saifuddin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Moor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Abbott&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tendai Chatara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angelo Mathews&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Woakes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James Pattinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kusal Perera&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mayank Agarwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mushfiqur Rahim&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ravindra Jadeja&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shardul Thakur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tom Curran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ashley Nurse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colin de Grandhomme&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;George Dockrell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Holder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyle Jarvis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mehidy Hasan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reece Topley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shikhar Dhawan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tom Latham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avishka Fernando&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daniel Sams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamid Hassan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jean-Paul Duminy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewis Gregory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Santner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Navdeep Saini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rohit Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shubman Gill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tyrone Kane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barry McCarthy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Miller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hanuma Vihari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jeffrey Vandersay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liton Das&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitchell Swepson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noor Ali Zadran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rubel Hossain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Mire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Virat Kohli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrew Balbirnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fabian Allen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isuru Udana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moises Henriques&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shai Hope&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tim Southee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Carey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Brathwaite&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elton Chigumbura&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Imam-ul-Haq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kane Williamson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mark Wood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mohammad Shahzad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prithvi Shaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thisara Perera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adam Zampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boyd Rankin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dawlat Zadran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hasan Ali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jofra Archer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lungi Ngidi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oshane Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sam Curran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuart Thompson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;William Porterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ashton Agar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colin Munro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Glenn Maxwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jason Roy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lahiru Thirimanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Neser&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Najibullah Zadran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Regis Chakabva&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shimron Hetmyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Travis Head&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Tye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faf du Plessis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;James McCollum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matt Henry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mosaddek Hossain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rassie van der Dussen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timycen Maruma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adil Rashid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brandon Mavuta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhananjaya de Silva&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hashmatullah Shahidi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonny Bairstow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahmudullah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammad Hasnain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pat Cummins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samiullah Shinwari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suranga Lakmal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wriddhiman Saha&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ODI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;T20&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Test&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type (bowling_cleaned.csv):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ODI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;T20&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Test&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;IPL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[attr:SR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[cnt:SR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:BF:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:SR:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X50:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X6s:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X10W:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X200:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:Avg (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Avg (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Avg (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X4s:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X5W:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Econ:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Econ:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:SR (bowling_cleaned.csv):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Wkts:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bating_cleaned.csv' id='bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1'>
            <properties context=''>
              <relation connection='textscan.0obb7k81itbuj71deahpx1s60km6' name='bating_cleaned.csv' table='[bating_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Player' ordinal='1' />
                  <column datatype='string' name='Team' ordinal='2' />
                  <column datatype='string' name='Type' ordinal='3' />
                  <column datatype='integer' name='M' ordinal='4' />
                  <column datatype='integer' name='Inn' ordinal='5' />
                  <column datatype='integer' name='NO' ordinal='6' />
                  <column datatype='integer' name='Runs' ordinal='7' />
                  <column datatype='integer' name='HS' ordinal='8' />
                  <column datatype='real' name='Avg' ordinal='9' />
                  <column datatype='integer' name='BF' ordinal='10' />
                  <column datatype='real' name='SR' ordinal='11' />
                  <column datatype='integer' name='X4s' ordinal='12' />
                  <column datatype='integer' name='X6s' ordinal='13' />
                  <column datatype='integer' name='X50' ordinal='14' />
                  <column datatype='integer' name='X100' ordinal='15' />
                  <column datatype='integer' name='X200' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='bowling_cleaned.csv' id='bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050'>
            <properties context=''>
              <relation connection='textscan.0obb7k81itbuj71deahpx1s60km6' name='bowling_cleaned.csv' table='[bowling_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Player' ordinal='1' />
                  <column datatype='string' name='Team' ordinal='2' />
                  <column datatype='string' name='Type' ordinal='3' />
                  <column datatype='integer' name='M' ordinal='4' />
                  <column datatype='integer' name='Inn' ordinal='5' />
                  <column datatype='integer' name='B' ordinal='6' />
                  <column datatype='integer' name='Runs' ordinal='7' />
                  <column datatype='integer' name='Wkts' ordinal='8' />
                  <column datatype='real' name='Econ' ordinal='9' />
                  <column datatype='real' name='Avg' ordinal='10' />
                  <column datatype='real' name='SR' ordinal='11' />
                  <column datatype='integer' name='X5W' ordinal='12' />
                  <column datatype='integer' name='X10W' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Player]' />
              <expression op='[Player (bowling_cleaned.csv)]' />
            </expression>
            <first-end-point object-id='bating_cleaned.csv_263F717D798C4CFDBFBB9EA12A9DD3B1' />
            <second-end-point object-id='bowling_cleaned.csv_3BC3F221A42A4C60B95F6255332B7050' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_F5BDBC98D303469D83E088F2D9668864]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Batting' type='sheet' worksheet='Player Batting Formats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batting' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_60E41E90ABDA4DE7944DCB60EE8C24CD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Batting' type='sheet' worksheet='Player Batting Figures' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batting' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_4C5D1848D64041F082E62C9FB389E0A1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling' type='sheet' worksheet='Player Bowling Figures' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_1F6D28CBD26143BD8479E6A6320BC188]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling' type='sheet' worksheet='Player Wickets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_AFEDB0663653420A964850139AA3183C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling' type='sheet' worksheet='Player Wickets Formats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_F8264AF4791E4D668627B30EB8E59082]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling Prediction' type='sheet' worksheet='Bowling Predictions 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling Prediction' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_1971A51BEBE8484AA63009175DAFBBE3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling Prediction' type='sheet' worksheet='Bowling Prediction 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling Prediction' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_AA3BB59A3D554CC892C374B5DF2CFF67]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bowling Prediction' type='sheet' worksheet='Bowling Prediction 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bowling Prediction' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Batting Predictions'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Balls Faced' datatype='integer' name='[BF]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[BF]' derivation='None' name='[none:BF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='None' name='[none:Runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Runs:qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:BF:qk]</cols>
      </table>
      <simple-id uuid='{CF5245F4-7513-4C74-80B2-25D024BA29E8}' />
    </worksheet>
    <worksheet name='Bowling Figures'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Matches' datatype='integer' name='[M (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[M (bowling_cleaned.csv)]' derivation='Sum' name='[sum:M (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wkts]' derivation='Sum' name='[sum:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
              <wedge-size column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]' />
              <size column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]' />
              <lod column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]> Match]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#e15759'><![CDATA[Wickets: <[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]>]]></run>
                <run><![CDATA[
Played <[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
                  <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]</field>
                  <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;IPL&quot;</value>
                <value>4976</value>
                <value>2200</value>
              </tuple>
            </tuple-reference>
            <label-position x='105' y='16' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{31CB9A3F-34AF-4DC3-A9FF-EB932B60D0EC}' />
    </worksheet>
    <worksheet name='Bowling Prediction 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Runs Given' datatype='integer' name='[Runs (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Runs (bowling_cleaned.csv)]' derivation='None' name='[none:Runs (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Wkts]' derivation='None' name='[none:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Wkts:qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Runs (bowling_cleaned.csv):qk]</cols>
      </table>
      <simple-id uuid='{8DF0A7B8-C4E1-4060-A62B-3802F66FE9A5}' />
    </worksheet>
    <worksheet name='Bowling Prediction 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Average ' datatype='real' name='[Avg (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Strike Rate Bowl' datatype='real' name='[SR (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Avg (bowling_cleaned.csv)]' derivation='None' name='[none:Avg (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SR (bowling_cleaned.csv)]' derivation='None' name='[none:SR (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Avg (bowling_cleaned.csv):qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:SR (bowling_cleaned.csv):qk]</cols>
      </table>
      <simple-id uuid='{E517D904-E211-437A-9EFA-42E51D030244}' />
    </worksheet>
    <worksheet name='Bowling Predictions'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Economy' datatype='real' name='[Econ]' role='measure' type='quantitative' />
            <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Econ]' derivation='None' name='[none:Econ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Wkts]' derivation='None' name='[none:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]'>
            <groupfilter from='&quot;Aaron Finch&quot;' function='range' level='[none:Player (bowling_cleaned.csv):nk]' to='&quot;Yuzvendra Chahal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
                <format attr='size' value='0.95552486181259155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Econ:qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Wkts:qk]</cols>
      </table>
      <simple-id uuid='{C4987698-DDA0-40C8-9703-B3D390197EC5}' />
    </worksheet>
    <worksheet name='Bowling Predictions 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Balls' datatype='integer' name='[B]' role='measure' type='quantitative' />
            <column caption='Runs Given' datatype='integer' name='[Runs (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column-instance column='[B]' derivation='None' name='[none:B:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs (bowling_cleaned.csv)]' derivation='None' name='[none:Runs (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Runs (bowling_cleaned.csv):qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:B:qk]</cols>
      </table>
      <simple-id uuid='{882017E3-FB5C-483F-A4D4-C05C18CDCB91}' />
    </worksheet>
    <worksheet name='Countrywise Batting Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Balls Faced' datatype='integer' name='[BF]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column caption='10W' datatype='integer' name='[X10W]' role='measure' type='quantitative' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[BF]' derivation='Sum' name='[sum:BF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X10W]' derivation='Sum' name='[sum:X10W:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:BF:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:BF:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X10W:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Team:nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F9931442-F49E-4357-93B9-AF08439D2754}' />
    </worksheet>
    <worksheet name='Countrywise Bowling Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Matches' datatype='integer' name='[M (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Team Bowl' datatype='string' name='[Team (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Team (bowling_cleaned.csv)]' derivation='None' name='[none:Team (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[M (bowling_cleaned.csv)]' derivation='Sum' name='[sum:M (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wkts]' derivation='Sum' name='[sum:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Team (bowling_cleaned.csv):nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2F4C3C4F-F9FF-424C-9B63-592F8884B65A}' />
    </worksheet>
    <worksheet name='Player Batting Figures'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Innings Bat' datatype='integer' name='[Inn]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column caption='Strike Rate' datatype='real' name='[SR]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='4s' datatype='integer' name='[X4s]' role='measure' type='quantitative' />
            <column caption='6s' datatype='integer' name='[X6s]' role='measure' type='quantitative' />
            <column-instance column='[SR]' derivation='Avg' name='[avg:SR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inn]' derivation='Sum' name='[sum:Inn:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X4s]' derivation='Sum' name='[sum:X4s:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X6s]' derivation='Sum' name='[sum:X6s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X4s:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X6s:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X4s:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X6s:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Aaron Finch&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Rohit Sharma&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Shoaib Malik&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Virat Kohli&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{C3EC28DC-FCAC-4695-9D51-ADBA77CB026B}' />
    </worksheet>
    <worksheet name='Player Batting Formats'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Matches Played' datatype='integer' name='[M]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[M]' derivation='Sum' name='[sum:M:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Aaron Finch&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Rohit Sharma&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Shoaib Malik&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Virat Kohli&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' />
              <lod column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk])</cols>
      </table>
      <simple-id uuid='{D291D81B-1153-4AC5-87FA-03BBF5200770}' />
    </worksheet>
    <worksheet name='Player Bowling Figures'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Average ' datatype='real' name='[Avg (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Economy' datatype='real' name='[Econ]' role='measure' type='quantitative' />
            <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Avg (bowling_cleaned.csv)]' derivation='Avg' name='[avg:Avg (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Econ]' derivation='Sum' name='[sum:Econ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wkts]' derivation='Sum' name='[sum:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Econ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:Avg (bowling_cleaned.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Econ:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:Avg (bowling_cleaned.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Jasprit Bumrah&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravichandran Ashwin&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravindra Jadeja&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Trent Boult&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D9F320E5-7251-4C1D-A4CD-858F645502BC}' />
    </worksheet>
    <worksheet name='Player Scores'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Matches Played' datatype='integer' name='[M]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column caption='100' datatype='integer' name='[X100]' role='measure' type='quantitative' />
            <column caption='200' datatype='integer' name='[X200]' role='measure' type='quantitative' />
            <column caption='50' datatype='integer' name='[X50]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[M]' derivation='Sum' name='[sum:M:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X100]' derivation='Sum' name='[sum:X100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X200]' derivation='Sum' name='[sum:X200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X50]' derivation='Sum' name='[sum:X50:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X50:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X100:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X200:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X50:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X100:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X200:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player)]'>
            <groupfilter function='level-members' level='[Player]' user:ui-action-filter='[Action2_60E41E90ABDA4DE7944DCB60EE8C24CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Aaron Finch&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Rohit Sharma&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Shoaib Malik&quot;' />
              <groupfilter function='member' level='[none:Player:nk]' member='&quot;Virat Kohli&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{FFA44E6C-F1EF-460E-BD5E-4811CEF66A01}' />
    </worksheet>
    <worksheet name='Player Strike Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Strike Rate Bowl' datatype='real' name='[SR (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[SR (bowling_cleaned.csv)]' derivation='Sum' name='[sum:SR (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_AFEDB0663653420A964850139AA3183C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' />
              <groupfilter function='level-members' level='[Type (bowling_cleaned.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Jasprit Bumrah&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravichandran Ashwin&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravindra Jadeja&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Trent Boult&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:SR (bowling_cleaned.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:SR (bowling_cleaned.csv):qk]</rows>
        <cols>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</cols>
      </table>
      <simple-id uuid='{084B7E63-FB2E-4B4C-83AB-4623E185C436}' />
    </worksheet>
    <worksheet name='Player Wickets'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Innings' datatype='integer' name='[Inn (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Strike Rate Bowl' datatype='real' name='[SR (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='10W' datatype='integer' name='[X10W]' role='measure' type='quantitative' />
            <column caption='5W' datatype='integer' name='[X5W]' role='measure' type='quantitative' />
            <column-instance column='[SR (bowling_cleaned.csv)]' derivation='Avg' name='[avg:SR (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Inn (bowling_cleaned.csv)]' derivation='Sum' name='[sum:Inn (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[X10W]' derivation='Sum' name='[sum:X10W:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X5W]' derivation='Sum' name='[sum:X5W:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn (bowling_cleaned.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR (bowling_cleaned.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X5W:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X10W:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Inn (bowling_cleaned.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[avg:SR (bowling_cleaned.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X5W:qk]&quot;</bucket>
              <bucket>&quot;[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:X10W:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv))]'>
            <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' user:ui-action-filter='[Action5_B2383FCA7A0147C68C8E0D6F03166D81]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_AFEDB0663653420A964850139AA3183C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' />
              <groupfilter function='level-members' level='[Type (bowling_cleaned.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player Bowl)]'>
            <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' user:ui-action-filter='[Action3_4C5D1848D64041F082E62C9FB389E0A1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Jasprit Bumrah&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravichandran Ashwin&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravindra Jadeja&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Trent Boult&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv))]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player (bowling cleaned.csv),Type (bowling cleaned.csv))]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player Bowl)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Multiple Values]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{16EB815D-B3F7-422E-BABA-CA5E89B82113}' />
    </worksheet>
    <worksheet name='Player Wickets Formats'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Balls' datatype='integer' name='[B]' role='measure' type='quantitative' />
            <column caption='Matches' datatype='integer' name='[M (bowling_cleaned.csv)]' role='measure' type='quantitative' />
            <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
            <column caption='Wickets' datatype='integer' name='[Wkts]' role='measure' type='quantitative' />
            <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[B]' derivation='Sum' name='[sum:B:qk]' pivot='key' type='quantitative' />
            <column-instance column='[M (bowling_cleaned.csv)]' derivation='Sum' name='[sum:M (bowling_cleaned.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wkts]' derivation='Sum' name='[sum:Wkts:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player Bowl)]'>
            <groupfilter function='level-members' level='[Player (bowling_cleaned.csv)]' user:ui-action-filter='[Action3_4C5D1848D64041F082E62C9FB389E0A1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Jasprit Bumrah&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravichandran Ashwin&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Ravindra Jadeja&quot;' />
              <groupfilter function='member' level='[none:Player (bowling_cleaned.csv):nk]' member='&quot;Trent Boult&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Type (bowling_cleaned.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</column>
            <column>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[Action (Player Bowl)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' />
              <lod column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]' />
              <lod column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M (bowling_cleaned.csv):qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:B:qk]</rows>
        <cols>([federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk] / [federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk])</cols>
      </table>
      <simple-id uuid='{EEF464C2-758E-4754-9280-480B256635F9}' />
    </worksheet>
    <worksheet name='Runs in Formats'>
      <table>
        <view>
          <datasources>
            <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
            <column caption='Matches Played' datatype='integer' name='[M]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[M]' derivation='Sum' name='[sum:M:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' />
              <wedge-size column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]' />
              <text column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]' />
              <lod column='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]> Match
]]></run>
                <run bold='true'><![CDATA[Runs: <[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]>]]></run>
                <run><![CDATA[
Matches Played: <[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:M:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
                  <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Runs:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;IPL&quot;</value>
                <value>86108</value>
              </tuple>
            </tuple-reference>
            <label-position x='128' y='-2' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{978A9E78-0ED2-4F22-AC61-A06FEDC1802A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Batting'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
      </datasources>
      <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
        <column datatype='string' name='[Player]' role='dimension' type='nominal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='18' param='vert' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='7090' id='19' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90954' id='13' param='horz' w='99002' x='499' y='8068'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90954' id='7' param='horz' w='91645' x='499' y='8068'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='90954' id='5' w='91645' x='499' y='8068'>
                  <zone h='45477' id='3' name='Player Batting Formats' w='45823' x='46321' y='8068'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45477' id='11' name='Player Batting Figures' w='91645' x='499' y='53545'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45477' id='16' name='Player Scores' w='45822' x='499' y='8068'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='118' h='90954' id='12' is-fixed='true' param='vert' w='7357' x='92144' y='8068'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='14' is-fixed='true' mode='checkdropdown' name='Player Batting Formats' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' values='database' w='7357' x='92144' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='15' is-fixed='true' mode='dropdown' name='Player Batting Formats' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' values='database' w='7357' x='92144' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='39' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='38' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='7090' id='19' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45477' id='16' is-fixed='true' name='Player Scores' w='45822' x='499' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='14' mode='checkdropdown' name='Player Batting Formats' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' values='database' w='7357' x='92144' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='15' mode='dropdown' name='Player Batting Formats' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' values='database' w='7357' x='92144' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45477' id='3' is-fixed='true' name='Player Batting Formats' w='45823' x='46321' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45477' id='11' is-fixed='true' name='Player Batting Figures' w='91645' x='499' y='53545'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{10CCA81D-4D3C-4A12-B073-E833D267A711}' />
    </dashboard>
    <dashboard name='Bowling'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
      </datasources>
      <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
        <column caption='Player Bowl' datatype='string' name='[Player (bowling_cleaned.csv)]' role='dimension' type='nominal' />
        <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
        <column-instance column='[Player (bowling_cleaned.csv)]' derivation='None' name='[none:Player (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49022' id='21' param='vert' w='82936' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='7090' id='22' w='82936' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='41932' id='19' w='82936' x='499' y='8068'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='41932' id='15' param='horz' w='82936' x='499' y='8068'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='41932' id='5' w='82936' x='499' y='8068'>
                  <zone h='41932' id='23' name='Player Wickets Formats' w='41468' x='41967' y='8068'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41932' id='3' name='Player Wickets' w='41468' x='499' y='8068'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49022' id='25' param='vert' w='16066' x='83435' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='16' is-fixed='true' mode='checkdropdown' name='Player Bowling Figures' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' values='database' w='16066' x='83435' y='978'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='17' mode='dropdown' name='Player Bowling Figures' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' values='database' w='16066' x='83435' y='9535'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49022' id='13' name='Player Bowling Figures' w='99002' x='499' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='45' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='44' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='7090' id='22' w='82936' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41932' id='3' is-fixed='true' name='Player Wickets' w='41468' x='499' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41932' id='23' is-fixed='true' name='Player Wickets Formats' w='41468' x='41967' y='8068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='62' h='8557' id='16' mode='checkdropdown' name='Player Bowling Figures' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' values='database' w='16066' x='83435' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='17' mode='dropdown' name='Player Bowling Figures' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' values='database' w='16066' x='83435' y='9535'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='13' is-fixed='true' name='Player Bowling Figures' w='99002' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2099E164-FB45-48F8-B45C-FABECEEC58E2}' />
    </dashboard>
    <dashboard name='Bowling Prediction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='bating_cleaned.csv+ (Multiple Connections)' name='federated.1krc7l61pcez6e14xo9ir1v34wrx' />
      </datasources>
      <datasource-dependencies datasource='federated.1krc7l61pcez6e14xo9ir1v34wrx'>
        <column caption='Type Bowl' datatype='string' name='[Type (bowling_cleaned.csv)]' role='dimension' type='nominal' />
        <column-instance column='[Type (bowling_cleaned.csv)]' derivation='None' name='[none:Type (bowling_cleaned.csv):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='12' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='81600' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='81600' x='800' y='1000'>
                <zone h='49000' id='3' name='Bowling Predictions 1' w='81600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='9' name='Bowling Prediction 2' w='40800' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='10' name='Bowling Prediction 3' w='40800' x='41600' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='98000' id='13' mode='dropdown' name='Bowling Predictions 1' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' values='database' w='16800' x='82400' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='31' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='30' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='98000' id='13' mode='dropdown' name='Bowling Predictions 1' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' values='database' w='16800' x='82400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Bowling Predictions 1' w='81600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Bowling Prediction 2' w='40800' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Bowling Prediction 3' w='40800' x='41600' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A6571C4-61C6-4B4B-AE07-7CE4996F503C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Runs in Formats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07A256A3-6ADE-4F31-987F-9BFB7A635ABF}' />
    </window>
    <window class='worksheet' name='Player Batting Formats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC768785-0680-44D4-8AE0-4710269F8C9C}' />
    </window>
    <window class='worksheet' name='Player Batting Figures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AA738FA-9B2C-4ED1-96A3-888F21DF657F}' />
    </window>
    <window class='worksheet' name='Player Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E43BBC7-ADF0-4BC7-964B-2441C9383425}' />
    </window>
    <window class='worksheet' name='Countrywise Batting Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BE93EC-C2CC-4BF7-A16A-3610891ECA58}' />
    </window>
    <window class='worksheet' name='Batting Predictions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:BF:qk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A109B3AB-0102-414B-B22E-15E5E3DE3D62}' />
    </window>
    <window class='worksheet' name='Bowling Figures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[sum:Wkts:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player:nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B8AC7F9-71C1-4466-A6DC-5787A531AC07}' />
    </window>
    <window class='worksheet' name='Player Bowling Figures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{642169ED-B64A-4A2E-8736-31494FE829A6}' />
    </window>
    <window class='worksheet' name='Player Wickets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' type='filter' />
            <card mode='dropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EC81A9C-5074-4E67-A2DD-2D712243CDFB}' />
    </window>
    <window class='worksheet' name='Player Wickets Formats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46D486AE-ADAF-4D0F-81A1-87F7EE8A1D18}' />
    </window>
    <window class='worksheet' name='Countrywise Bowling Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{460C93CB-D74A-4C90-83F2-3ED04F1AFB0D}' />
    </window>
    <window class='worksheet' name='Bowling Predictions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF9211FD-FC22-4DA5-9E12-39E12B78E443}' />
    </window>
    <window class='worksheet' name='Bowling Predictions 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B49E4E33-A75B-4B84-B633-FFFEFD29EA78}' />
    </window>
    <window class='worksheet' name='Bowling Prediction 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19E334DD-2106-4F41-B6A7-DF36D40011D6}' />
    </window>
    <window class='worksheet' name='Bowling Prediction 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{780F2DD4-4B9A-4609-99D4-306C95950E0F}' />
    </window>
    <window class='dashboard' name='Batting'>
      <viewpoints>
        <viewpoint name='Player Batting Figures'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Batting Formats'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Scores'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D3A736B8-5BFC-4EF8-8BA0-93F05BA58F91}' />
    </window>
    <window class='dashboard' name='Bowling'>
      <viewpoints>
        <viewpoint name='Player Bowling Figures'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Wickets'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Wickets Formats'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{28608D78-1791-45D7-9ECA-93FB3F13192E}' />
    </window>
    <window class='dashboard' name='Bowling Prediction'>
      <viewpoints>
        <viewpoint name='Bowling Prediction 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bowling Prediction 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bowling Predictions 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1E97FEA1-10D9-46F1-897B-60C9201F40D0}' />
    </window>
    <window class='worksheet' maximized='true' name='Player Strike Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Player (bowling_cleaned.csv):nk]</field>
            <field>[federated.1krc7l61pcez6e14xo9ir1v34wrx].[none:Type (bowling_cleaned.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8B16AF4-1FAB-4A99-844C-032A53C7DFDB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Batting' width='192'>
      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
      BznGwonqBYMPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Batting Predictions' width='192'>
      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
      UNjU/P8U6/ErBgdNpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bowling' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bowling Figures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3deXgU953n8XdV361Wq3ULXUhgxCEBMkccDNjGx46HxJ7x7LLObmYTOzPJ
      zkzimWfzZLPPzsOz9mayWSfZnWRnZhMn2ZkkNkwOQ2J7uBwwYECEQ2BOSSB0X61b6m71WV2/
      /UOBEBuwgO6uFv17PQ8Pjx51d327VJ+qX1X96vdThBACScpQqtEFSJKRZACkjCYDIGU0GQAp
      o8kASBlNBkDKaDIAUkaTAZAymgyAlNFkAKSMJgMgZTQZACmjyQBIGc1sdAHSvUsIga7r6LrO
      2OgYfX299PcNEJ4KEg1GiYUiRENRRFwnHtMQAqIXjzFfEeBwgMUy/X9REXg8KEVF5BQUUFlV
      xZyyMlRVxWQyoSjKHdcoAyAlhBACn89Hf18/PR3dDPYM4POOExwLEPGFsAgzhe48PK4cLKoJ
      CwCW3/z7rdDeAzw1PnjjZQBjQB/QYrWilZWhV1URX7YM25IllNfXU1JdTX5+Pqo6s8aNIp8H
      kO6EEIKhoSGaLjTR3dLBRN8o0bEQWdjJdeXgtDnu6HND3/0yn7hJAG4lAgwA3pwcRmtqiKxY
      gWf9espXr+a+++67aSBkAKQZi8VinD93nvMnzzDWMYQ2GqE0pwin1THjPe6HudMAvJ8AgkCP
      1cqlefNg40ayH32UBx55BKfTea3ZJAMg3VI4HObi+YucPXqKkcsD5OKiyFOYtOUlKgA34gMa
      c3IIbNxIzjPPUPfoozIA0gcJIWhuaubkgV8z2NKHR2RRlFNwVyebM5XMAFxvDLhQUCBPgqVp
      QgimpqZ45+29tJ+4hN2vUpxTiCenyujSkiIPeGhkRAYg0wkh6OrsomHfIfoa26l0lzLPWgq5
      RleWGjIAGayjvZ19v3ibyUtDVOWVs7BgntElpZwMQIYRQtDd1c3br+8k1DZBZW4pRUXVRpdl
      GBmADDI2NsZP/3EroUtjzC+qQsl3GV2S4WQAMkA4HOaNn25noLGT8qwSrMU5RpeUNmQA7mFC
      CBpPNLL3tR3Ms5cyL6fC6JLSjgzAPWpkeIRfvvY6sSt+anPnG11O2pIBSLKuri4qKytTchMJ
      pvf6B985wNGf72dh3jwsuVkpWe5slbHPA7S3t/OpT32KDRs28JOf/ARN0wgGgwghiEQiBINB
      AoEAmzdvJhwOA/Dyyy+zefNmhBB8/vOfZ+vWrcRiMQKBALqu841vfIOuri50XScUChGNRnn1
      1VeZmppC07Skf6dQKMT3//d3aH3jPWoLFmAxyf3bhzG99NJLLxldhBFyc3NZuXIlAJ/5zGf4
      67/+a7Zt24bb7eYrX/kKp0+fBuCHP/whBQUF1NbWcuTIEUKhEMuWLePUqVPk5+dz+fJlvve9
      7zE2NsaePXtoaWnBarXy8ssvEw6HuXDhAg0NDZw6dYqHHnooKd9FCMG5M+f4x69+h/J4AR6n
      O2VHnETTGvdSF55K2fIy9ghwvXA4zNDQEE888QSjo6MsX76cqakp6uvreeyxx9i0adO119bV
      1fGjH/2IdevWARCJRNiwYQNer5e1a9eyefNmmpqaePHFF/nkJz9JWVkZX//614nH40mpPR6P
      s+MX/8K7P9jJ8vyF2C22pCznXpXRAVAUBavVisPhoKysjAMHDmC1Wunu7sbv9wPg9XrZsmUL
      AFarldWrV3Pq1CkWLVqE2WzmzJkzNDQ0oKoqdXV1fPnLX2blypVs3ryZH/7wh9hs0xvk1f8T
      KRAI8INvvcLQu+3MzS2ftXt9I8neoLPUoHeQV//XD5irlmCzWI0uJ2FS1Rv0KnmWNAtdunSJ
      1//2NZbkzsdkMhldzqyW0QEQ8TgIgWKeXg1C10HXr/2cboQQNB4/yZHX9lKXv0A2eRIgY84B
      /PveQWga4//8E+I+P4F3D6F5vUS7uq69RhscJHj8+Afeq42PEzx58qafrU8FGd+ylYmfv87V
      FqU2NMT4q68R9/uJT0ww8nd/z9iPfoweCk3//Pf/gB4M3tZ3eGfPPo7+eB/zPBVy40+Q9NzV
      JYOmoQ14IRYj2taGNjiItbIC3edn6tBhwi0tOFeuBF3g+5cdOFatxPfWv2DKy8NcUMDUwYMo
      JhOhM2dRTCayn/o40bZ2nKtXEWw8iaWsDOu833YnFrEYit2O0DQ0rxdLeTlZ69ai2O0E9u5D
      zc6ePgLN0M43d9C+5zxVeeXJWDsZK2OOAJaquQRPnMBeX0+0ox3V6URocfSpKaK9veT96Z9g
      nlOCb9duLKWlRJqasVZVoU9OYp0/D+faB7HX1YEQqC4XJrcb5+pVAOgTk4hIBP+u3cQnJqaX
      V1aG6nQCYC4pwVxSwuT2XxA6dZpYXx/6xCSxru4PrVsIwVvb36TrV01U5JYmbwVlqMwJQFkZ
      oTNnsVZWonmHMJcUT//CZEKxWPC98Sba0BCuRzcQaW3FXFyE5vViLixEdTqJXG4l0tqKKScH
      zeslPjZGuLkFAFtdLbH+fhA6CEG4uYXQuXOELzYxdeAgWl8/2uAgoGApKSbrkUdQs5zXAnIr
      u9/axcCBK5R5SmSzJwky5jKoEIL4+Dim3Fx0vx/V7gBl+kRYMZuJj42j5rhBn96IFYuFuD+A
      oiqoOTnok5MoFisiGgFVRc3KQg+HMblc0yOgTU6CyUSsrw9FVTGXlKAHQyiqgikvn/j4GKrD
      ieqa7pujT02hOBwotxhOZM+O3bTuPENlXlmqVpPhUn0ZNGMCkCpC10FR7mpvLYTgxNHjHHtt
      P3PzyjJqzy/vA8xyt9qjz9SFc+dpeG0f8/MrE1CRdCsZcw5wla7rHDx4kIaGBjRN48KFC7f1
      /u7ubnw+37WfW1tbCYVCwPSe+8yZMxw/fpx4PI7P57u2HF3XaWxspK2t7ZafPzAwwK7v/UJu
      /CmScQHQNA2/309lZSW7du2io6ODWCzG/v37OXv2LH19fYTDYUZGRpicnKShoYHLly9P34Rq
      bGTXrl0Ef3P9fmJigq1btzI0NARMDx2Yk5NDVlYWR44cYfv27VRUVLBz504OHjyIx+MhOzv7
      prWNj4/zo//5PWo8ValYFRIZGACAwcFBent7cbmmHwoXQlBcXMyvf/1rAoEAJ06c4NixY5w5
      cwaPx0NzczONjY2oqsqyZcuuvefw4cPXeoXCdGc5v9/Pvn37qKmpwW63U1lZSTAY5OLFizQ3
      N3Po0CFudNqlaRr//J0fs8BZiapk5J/FEBm5pm02G5WVlTzyyCMANDU1MTExQV5eHiUlJQwO
      Dl57MObMmTPous74+Djl5eVYLNPDeft8Pjo7Ozl9+vS1ZweEECxdupRnn32W06dPT195isdR
      VZXCwkKefPJJYrEYuq5/oKbXt/yM7BGzfIglxTJubauqSn19PWVl05cWKyoqKCsr49ChQwBY
      LBY8Hg9FRUXU1NSwa9curFYrDzzwAHv37iUej1NTU0NOTg4vvPACra2t5ObmsmXLFh5//HGO
      Hj2KoiisWbOG/v5+tm/fzvr16zGbzbz11luUlpZ+oANb44mTDB/rYm6+vMubavIy6PsEAgF2
      7NjBpk2bZtzT8urkEDk5tz/cyKB3kH/6799hSZ58cB3kZVDDuVwuPvGJT9zWexRFuaONX9d1
      fvb9rdTkzL3t90qJkZHnAOlixy/fInvEjFm2+w0jA2CQzs5Oruw7T162x+hSMpoMgAE0TWP7
      D35KlUee9BpNBiDFhBDs27OXXL8DkyofZzSaDECKTU5O0vjmEfKzM2QGijQnA5Bi21/9OUsK
      7jO6DOk3ZABS6PKlS/guDMqmTxqRAUiReDzOnp/soCpfDlGeTmQAUuR042mswyJhE0pLiSH/
      Gimg6zqHfrGPkpzkTTAt3RkZgBRoOHyE7IA1ox5tnC1kAJJM13Ua3jxIsUfu/dORDECSnTx+
      Ak/kw4c/kVJPIAOQVEII3tt/Urb909Q7TosMQDJ1dnQS7vbJtn8auqTAPzy3XAYgmd55820q
      8+RwhulmBPjq0wtxfKRUBiBZQqEQA2e75F3fNBMDvvqRUmJP16AoigxAshx85wALCquNLkO6
      jgD+rjSbnueWo5qnN30ZgCQQQtB85JycsC6NCOCXOTYO/eVqbFm/nVJKBiAJOjs7MU8KefKb
      Rs5ZVLZ8bgVZc353YDIZgCQ4ffQkc7Llpc90MQi8vGkJttoP/k1kABIsHo/Tc64D6z00c+Ns
      FgL+6/pKlN+bf8MjsgxAgg0MDKBMaEaXIQFx4JuLCvB/su6mr5EBSLCTR45T5ikxuoyMJ4Cf
      Fzo58x9XYHFYbvo6GYAE67nQgcV88xUupcZhm4mf/flK7HmOW75OBiCBQqEQ/v5xo8vIeK0K
      fPs/LMM5P+9DXysDkEBHDh9hXp6c2MJIfuDljy/Atm5mj57KACRQ/+VuHFa70WVkrDjwlfpi
      An+wcMb3YGQAEmi4wytvfhlEB/6hxEX7Z1dgssy8/5UMQIJMTk6i+2NGl5GRBPB2loUDn1+F
      zXV7919kABLkyuVWCuxyoFsjXDSrfP9P78dZeftD1MsAJEhb8xXcTrfRZWScMeCrf7QIx4o5
      d/R+GYAEmfSOyfm9UiwM/LePlKL8/p0PNSkDkAC6rhMY9n34C6WEiQPfui8X7/P1KOqdX3iQ
      AUiAYDCI5o8YXUZGeSvfQeOfrcTqvLu77jIACTA2OoZFk48+pspxk8KPP7cCW2HWXX+WDEAC
      9Hb3kOu6/SsQ0u3rVODrn1yKY2F+Qj5PBiABvP1e3I7sD3+hdFeCwP/4V/OxbahK2A1HGYAE
      CE745ajPSaYDX68rxLdp8V2d9L6f/KslQHB8yugS7mkC+H5xFuc/d3vdHGZCBiABwoGQ0SXc
      0/Y5Lez581XYcxLf0VAGIAFiQXkJNFkumxS+9/xynNXJ6WYiA5AA4WDY6BLuSRPAV56qwfqR
      sqQtQwYgAeIR+RB8okWAzSvmoD1Vk9TlyAAkQDwqA5BIOvCdSjfez9RfG8IwWWQA7pKmaajI
      h2AS6Vi2lUNfWI01O/ljK8kA3KVYLCZHgE4gP/DjJ+bhKHalZHkyAHcpGo1iMskA3C0hBMO+
      UV5dnMvkxxakbLmyA/tdMpvN6LpudBmz0lQ4SPtEP2p5IQOaj27nBM7H5yS93X89GYC7ZLPZ
      iMXlSfBMxXWd9qEuukxTjBXbyX9gIQ63GyfgvHAGkz21Q8rLANwls9mMLuQR4Fbius6wf5QL
      vh7GSrPwbFhAVl4u5e/rP+Wf6CZ7QWoHFZYBSIBE90+5F1xt07eFhhhwC0xLysiv2vCBjf4q
      XdcJhwdwK6ndJGUAEsBsk2OBXjUVDtI03IHXLdCqC8m7bxUltg9v1mjhMFj8QG7yi7yODEAC
      WJ2ZPRpcVIvSNtLLZcaJ3VdMwbqV5Nntt9Vnf9w7QFZh6qeUkgFIALM9844AcT1O+3APnYof
      X6mL7MeqKcxbecefNzbQhmuBM4EVzowMQALYXY7pqUjucUIIBsYHaYuMMJxvxvbRuXhKl5OV
      gIeBwmEvqbn19btkABLAkZN1zwZACIEvFODSeA9dzij25fPJraihJIE3//R4HE2MAqkfWEwG
      IAGycl2IgfA9NTBuMBLi0mgXfVka0bkF5D+yirIZnMzeiYmBAbKKjNkUZQASIL+4AO97rWTZ
      U9+GTaSYpnFluItOU4BQZS7uVYvJzclJerDHvJ045xgzp7IMQAKUlpfSMtU4KwOgxeMMTA5x
      OTLEcIGF/CdqcXtyyEnh0SwU8JKTwu4P15MBSIA5paUEtNlzEiCEYNQ/zoWJbsZLnZjr55BX
      uZhKA5pwejxOTB9BUYy5kiYDkABOpxNTVvqvSn9oigsj7QznmWFBMZ6qtRRbjZ3PeGp8HLMr
      AsgAzFoWiwVHQfb0cMVpRAhBOBahbayPbmuQyRInZY+socCaPvctxr09OPKMq0cGIEHyygqI
      t8YwpcEAWbG4Rs/4AM3RIYKVueSursHjdpOO03cEJry47jPuKCQDkCBl1RV0nj+P22ncEIl9
      414uhYcYK7LhWlNNTlEduWkQyJsRQhDVBhM60tvtkgFIkOoF83gv3JDSAOi6zkTQR9NEN8N5
      ZtTaUgqq11Oaxhv99eLRKHHGAOMGFpYBSJDS0lJClmhKlhUIT3F5vJduWxixYA75jz9IsSV9
      2vUzNdbfjz3P2K7kMgAJoqoq7jl5CL9Iyo0jXdc539NCnytOuDIXz5o6ilxG9J5JnAlvF9nV
      dz/G/92QAUig4vlziJ2awGpOzEldLK7RNzHIlfgYowVW8p9aSo47G8890uUiHO3HYWD7H2QA
      EuqRxx/l/+3+NgtL73zSNiEE3olhrkSG8boFztXzyS2rY/bdY741oQsi0SHA2HkVZAASKC8v
      DyXnzvb+gfAU5wavMFhgxlxbTk7lA5TNwnb9TPlHRrClwXVZGYAEy5tfhBiY2XlAIDxF63gv
      PfYIkbn5FD+8liKL+Z7qVXozo30dZJc4jC5DBiDRln90BSf+aT9leSU3/H1Ui9Ex2kenKYCv
      xEneA0socGfeBNv+8W48pcYPJiADkGC1dbXsjv+SMn4bACEE/WNeLgT78Ze7yX54Hq6CfLIz
      YE9/I0IIYvooSopHgLgR4yu4xzgcDsqWzCU+qDPqH6Ml0M9IgRXLinLyKh7L2I3+emG/H3NW
      hHTY/Iyv4B5U+8Ay/s8PXsVSW03hwrWUmOVqvt64tw+HwTfArpod98xnmZWrV5FbW0VJ7SJM
      cuP/gMmhbuweY54Aez8ZgCQwm80sLyqRg+begBCCSNSbNle6ZACS5A9/70mGW68YXUbaiWsa
      cXXC6DKukQFIkqKiIspNFoQQRpeSVia9AzjyjK7it2QAkuhjqx/ANzhkdBlpZayvG1eRsR3g
      ricDkESrVqzANjpmdBlpJRQZMPQBmPeTAUgii8XCo0uWEvL7jS4lLei6TjQ2aHQZv0MGIMme
      ePhhQlc6jC4jLfiHR7C402s2HRmAJHM6nWy4r4ZocPaMG5Qsk0P9ZBWkx/X/q2QAUmDTH/4h
      vkuXjS7DcAFfL1ZnenXxlgFIAYvFwsal9YR8PqNLMcy1G2BpdAIMMgAps/Gxx1D6vEaXYZjI
      1BTCFDC6jA+QAUgRh8PBU/evwD88YnQphvCNDOHIT48OcNeTAUihxx/ZgHskM+8LjA+048w3
      /gmw95MBSLHnP/YUw1fajC4jpabb/0Ooadb+BxmAlKtZsIDVuQXEwhGjS0kZoetEY+nZ9JMB
      SDFFUfj0M39E6PKVjOko5x8dxepJrxtgV8kAGMDpdPLv161nsn/A6FJSYuByMznl6fngvwyA
      QdZ+dA1zwzG0WMzoUpIupo2kZfsfZAAMo6oq/+kzf8LUxWajS0mqqyNApCsZAAM5HA7+bONT
      jLXfu53lghMTmLLStx+UDIDBli9dytr8onu2m8RYXy/O/PTq/3M9GQCDKYrCpzb9WzzeYeJa
      el4puRuByV6sWTIA0i2oqsqXnvsMUxdbjC4loYQQRGJDqKb03czSt7IM43a7+cJTf8BkW/s9
      c38gGgwhzOndtJMBSCO1S5bw7+pXMtnTa3QpCTE1MYY1O73HRpIBSDMPr13HY8WlTI2k76XD
      mRrr7yCrIP06wF1PBiANbXr6D6iJxpkaHze6lDsmhGAq0IvJkn5doK8nA5CGFEXh859+jvlT
      EaLBoNHl3BkhiETTawSIG5EBSFMmk4kXnnuevP4hoqGw0eXctpDfj9mV/t08ZADSmNls5suf
      /Rz2to5ZFwLvlcvkVRk3AfZMyQCkOZvNxksv/BUFA4NEpqaMLmfGgoG+tG//gwzArGCz2fgv
      n/szKsf9BMZmx4nx9BSo6U8GYJYwm8385XPPsyiiERgaNrqcWwoHAqjO9O0Adz0ZgFnEbDbz
      +U8/x/rsXCa6e4wu56ZGe7txFaVv/5/ryQDMMqqq8olnnuETi5cy2nzJ6HJuKDDRj9UlA3BP
      euutt3j++ef57Gc/y7Fjx/ibv/kbvvSlLzE6OsqWLVv44he/yODg9PXv7du3s2XLFoQQvPLK
      Kxw4cOB3Pmvv3r3XXnvVN7/5TWIzeErskXXr+NLGp/Cfu4AejyfuC94lIQSRyHBad4C7numl
      l156yegiZpOFCxfS39/Pc889x9y5c6mpqUFRFJqamrh06RLPP/8827Zt48EHH2TXrl00NTXx
      6KOPsnXrVrKysujv7+cb3/gGTqeT7373uxw8eJCFCxfyta99jZ6eHrq7u/nVr35FX18f999/
      /03rUBSFgoIC1tYupfHgQfyqisVhT+GauDEtEmWw/wjOAnkEuOe53W4OHTpES0sLK1eupKys
      jNLSUoK/uXurKArV1dW8/fbbLFu2DACXy8WGDRs4fPgwTzzxBC+++CInT57kj//4j/n0pz+N
      y+XixRdfpKdnZm18j8fDf/uLL7DKbEuLJ8smhwYxu2bPcw0yAHehubmZHTt2UFVVhRCCEydO
      8O1vf5vFixdfe82DDz7IK6+8wrp16wDYtm0bo6OjaJqGx+Nh27ZtFBQU8Prrr7Nv3z7MZjNW
      qxWTaebX0M1mM5/6N5t44aFHCVxoJhYxbsyhicFuXEVOw5Z/uxRxr3Q+T6H+/n5yc3MJh8Oc
      P38emG4aKYpCb28v9fX1qKpKb28vBQUFdHV1MXfuXCYnJ9F1nfHxcbKzsykpKeHUqVMsX76c
      jo4OHA4HJpOJsrIy+vr6qKysvO3aAoEA/3fLq7SbVTzlZYn+6rckhODi4V+Ss2h23KsAGYB7
      khCCw0ePsuXwQdy1izFZUtMeF0Jwev93KFpq/LnITMkm0D1IURQeWruWv/3CX7HAF2S0vSMl
      T5lFgkF0dXbNhyaPADchdJ1Icwu2xYsInTiBY9UqIpcvo1gsqK5sLHNKAIhcaUOxWbFWVPzO
      +7WRUYQWw1JScsPPj3Z1Ez53DlvNAqw1NQDEevsInz2LfflyTO5sgseOYy4pwV5XS/D4CRSL
      Bceqlbc9y3pLSwv/tHsnwcJ8sgry72BtzEznmffQ805gsZuTtoxEk0eAm1EUwufOoft8TB0+
      Qnx8nPDZcygmM4rVQvjiRSZ++jO04WFEMEiw8RTxyUkmfvozwi0tTB08yMSrW4i0tTH5xpv4
      f7WXWH8/kauzxytgX7aMwMF34Tf7oPjoKPblywjsewdteARbzQJCjacIn7+APjlJrKeH2B3c
      AV60aBFfe+Gv+Ndz5zN++gzRUHK6KQQD/bNq4wcZgJtSFAVTbi7hCxdxrF5NuKkZU24usYF+
      4iOjBE+cxP3xj6NarQT2H0AxmwkcOIhj1UpCJ05iXbCArIfXo9odaENDmIuLMRcXY51XDYCa
      lYV/1y7MRUWgKCiKgq1mAcGGozhW1GOtriJypQ3znBLiExPY6mqxLVmCNnxnnczMZjMb1q/n
      7774n/koFnwXW4iFE9vFOhKbfTPgyADcgrW6muDRozjq6wk1NmKtrpr+haogNA1taBAR1zB5
      PMR9kyiqSvjcecwlxah2G9rgEKgq9sWLmDp0CD0YRPxmo9OGhsne+PvXjiBxn5/JX76Bdf58
      zCUlBBuOIqJRHMuWYi4qJPzeGcLnzmEuLr6r72S323n2mWf427/4Ag9gIdDSSsh39+32WDiS
      llMgfRh5J/gW1GwXqs2Gdf48FJMZ28KFqHY7ptxcrJWVRNvasVZXY1+8GEVRsS9bSnxsDHNR
      EbaFC9GGhjF7ctBGx7DXLkF1ONADAUxuN/HJCaKtV3B+9AFiPb3ooSCqzY4+Po4+FcSUn4fu
      86GNjuKor0cPhTAXFmGrWXDb5wA3YrFYqFu0iIfrloJ3kLbmFqYAW9adXcMf7e5Cs7Wl3SyQ
      H0aeBKcBbXQUU15eQjbsOxWPxznR2Mg7Z96jU4uQU1mB+TYun146th9bxZVZ8RDM9WQApA/o
      7u7mwPFjnOzuIupx4ymd86HhPLN/K/l1s+uxzbA/IgNwJ4aGhigqKkra69NFNBql+dIl3j19
      iotDXijIxzPng5d147EYZxt+QOGS9JoF/kaiwRiR3hhLi+7n4boNMgAz0dnZye7du3G5XKxa
      tYorV67wsY99jImJCZzO6TazzWYjGo1isVjw+Xw4nU4sFgt+v5/du3fz7LPPous627Ztw263
      8+CDD1JQUABAb28v3/rWt3j55ZfZvXs30WiUwsJCRkdHUVUVVVV5+umnjVwFxONxmpqbOfze
      aVqHh/BZzGSXzcHqcOAbHqK7+yd4KrMNrfH9hBDomk5kLIY14GBZyf18pOYB1q1Zj8PhQFEU
      ZtdFWwOtW7eOnJwc2tqmZ3icnJzk4sWL9Pb2UlhYSG1tLQ0NDVRUVDAyMkIgEGDZsmVcuXIF
      r3f68qDX62V0dJTy8vJrnd3i8TgnT56kvr4ei8XC008/zenTp/H7/cTjccrLy+nv7zfse19l
      MplYWlfH0ro6YDq055ubOdfRzkDbJVSrSmgijMNjXDcIIQSxkEZ4JIIbDxXOuSwuq2Xt+nXM
      mzcPs/mDm7sMwAwIITh8+DCLFy9m3bp17Nmzh56eHkZGRujv72fjxo28++672O12Ll++jNvt
      ZmJigo6ODp588kn27NkDgK7rVFdXs2bNGvbv388zzzxDQ0MDXq+Xrq4u2tvbaW5uxuPxsG7d
      OrZt24bH46G7uxshhKEnye9XXl5OeXk5v890iEdGRrjUdomLbefp9/XRPdaJN9CPmq3gKnRi
      cST26lA8Fic4FiI0FiHXkk9l7lwqc6uYVz2fZRuXU1xUjN3+4WGUAZgBk8nEhg0brnVztlqt
      hEIhhBDY7XZcLhdDQ0M8/PDDaJrGuXPnqK6uZu7cubz++uvXjgClpaUcPnyYPXv2sHjxYnbu
      3MmTTz7JmjVreOONN8jPz+fs2bMsXbqU1tZWAJqamlDV9L5dYzKZKC4upri4mIcefAiYDrum
      afT09tDV1cXAyADD/kFGgyOEtBC+8CRT0QBTkQCarqGYFFBAMYHQQMQFZtWMzSeZNg8AAACU
      SURBVGzHZXPhsmbjtrtx23PIdeRTXlxBxZoKKsoryMrKQlXVO9pByHOABPD5fOzcuZNNmzbd
      8DB7I5qm0dHRwYIFC5Jc3ewQiUTQdZ1YLIbNZsNmS80JtQxAAoRCIWKxGG53ek4FKt2cDICU
      0dK7cSlJSSYDIGU0GQApo8kASBlNBkDKaDIAUkaTAZAymgyAlNH+P66ticlL27KqAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bowling Prediction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bowling Prediction 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bowling Prediction 3' width='192'>
      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
      RhsBNO5r/gfb8cJQp8hYiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bowling Predictions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bowling Predictions 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dZ3Rc1dWwn+mjPuq9d8myZMsdG2zAgOmht0BIgSQvhJSPkB7S8yZ5UwlJ
      CC10MN3YFAMG3Ktky6pW73U0mt7uPd8PxQLjpjKSRnietbyWtTTad987Z9+zzz777K0QQggC
      BDhDUc62AgECzCYzYgCyLDPZicZut/tYm1EkSTpjZU6X3JPK9Hjg178GkwkhBBXdnbQNG8cl
      UwiBLMs+1HJ0PB6VOSMG4I9e1nToNFdkTpfcE8oUAv74R1CrwWCg22KmoruLpPCIqcmdIkdl
      qn0uOUCAT7JrF+zcCS+8gNPjYWNdNVfPK0WjUs22ZkDAAAJMJyYT/OQn8NBDCI2GN2uqWJqa
      TnRwyGxrNobfL4L90X0KMA5kGb7/ffjylxEZGVR0d6FVqZmfkDTbmh2D3xtAgDnKq6+O+v/X
      XMOg3cb+7g7Oz8lDoVDMtmbHEHCBAvietjb4859hwwZcQvBaTRWXF85Dp/a/4RaYAQL4FqcT
      vv1t+N3vEOHhvN90hNLEZOJDw2ZbsxMSMIAAvuVvf4Pycli6lLqBPuweN+XJqbOt1Unxvzkp
      wNylogI++gjWr2fE5eSj1mZuKVuE0s/8/k/i9wbgb4umACdheBjVd74DTz2FR6Ph1YMHuDiv
      kBCtdrY1OyUBFyjA1JFluP9+pDvvRKSm8lFrExmRUaQaImdbs9MSMIAAU+fll0cXv9dcQ+uw
      kV6LhbPSM2Zbq3Hh9y5QYCPMz2lvhwcfhJdewiZJvHWkjpvLylEr/SPV4XQEZoAAk8fphLvv
      ht/8BikigjcaarggN59wnX62NRs3kzYAIUv09vQiA7LkobGuhq6+ISSvE4vVifA6GDLZfKhq
      AL9CiNE3/9KliCVL2NXRSqQ+iOyomNnWbEJM2gD6ezppbGpDBoaHBknIyKGnpQGbfYTeXhOH
      Kg6hC547b4IAE2T3bvjwQ/jOd+g0m2gcGuLcrJzZ1mrCTHoNEJ+czpDRAkB0bAK9nc3IunC0
      SjhStZe0+eWEalVIkoQkSZP25SVJwuv1TlbNU8o9U2VOWa7FgupHP0J64AGcQvBmfS1XFBSj
      EPj8uxJCjP3zFUcPwwghfLMI7u84Qr9Lz6KyLNz2AXKKFzDc34E7IwHtf/O+lUrlpGL6KpUK
      9TTlkEyH3Lkic9JyJQl++EP4yldQ5ufzbu1hzkrPIj48Aq/X63Ndj54IU/nw/MDRE4oKpWLy
      LlBn6xFGLGbqG5qwODwIh4nD1fWgCiIyKoIFpXn09A1PWdnARpif8dpr4PUirruOiu5O1Eol
      RXHxs63VhJGFzDP7/zP5GSAlI5eUjNwT/k7/X9c/PXiy0gP4JW1towvf555j0G6jsqeLm8sW
      zbmXlEfy8Mz+x4kOiQmEQQOME48H/t//g5/+FE9kJK9UH+KS/CL0fpjifCrcXhcP7XyAZEMq
      l827KrARFmAcCAF/+QuUlSFWruTt+hoWJqWSEBY+25pNCIvLzMM7H2Rx6nKWZ6xEoVD4vwEE
      8AP27x8Neb70EjX9fTg8HsqTU2Zbqwkx4jDxrx1/49y8C1iYvDhQFSLAOLFY4HvfgwcfZFjy
      srO9lRtLF84pv7/f0sfDux7kcyXXUhBffIxXETCAACdHluHHP4bbb8eTnc2rlftYm5vn9ynO
      n6RrpJPHdv2TWxZ/kYyoLICAAQQYJ6+/PjoD3HADH7U0kRUVTbohara1GjdHBup5/sCT3L70
      TpINJz6VFjCAACemsxP+9Cd47TUaTcP0WS1cP3/BbGs1LoQQ1PfX8MqhF/j6ym8RFRJ90s/6
      vQHMJV/zM4PHA9/8Jvz851iDgnj/4AGun1+GSun/UXMhBLvatrO1aQv/s+rbhOtPXYLR7w0g
      wCzwj3/A/PnIq1axoaqSNdk5ROiDZlur0yKEYGvTFg52H+DuVd8hSHv6nVi/N4DAPsAMc+AA
      vP024qWX2NnRRnRwCDlzIMVZCMGm2tfpGG7jK8vvQq8ZXyay3xtAgBlkZATuvRceeogOp4PG
      oYE5kerglbxsqH4Zs3OEO1bchVIxflfN/526ADODLMPPfga33oozPY13jtRzSX4xaj/3+2Uh
      89S+R5FkiVsW3T6hwQ+BGSDAUTZuhOFhxM0380ZdNcvTMogJ8Z8qzidCCMGLlc8SFxbPusLL
      JzVTBQwgwMchz/XrOdDXg06lpjg+Yba1OiWSLPFm7esEaYInPfgh4AIFcLtHQ57330+PVkNF
      dycX5ubPtlanRBYyL1Q8zbDdyLrCy6a0RvH7GcDfF2BzGiHg3/+GefNwr1jBpsp9XFJQjNaP
      U5y9spen9j1KdHAMlxRfOWGf/9P4750GmH4qK2HTJsT69bzb1EBpQhKJfpzi7PA4eHz3Q6RH
      ZUzJ7fkkARfoTMVqHc3y/OMfqbWasbrdLPTjKs52t52HdvyNkqSyKbs9n2TSBiB7PXR2do3V
      BTpSV03/sAXJ68RscSC7bQwOT70uUGAjbBqQJBQ//jHccgvG1BS2t7VwWUGx31ZxNjmG+cuH
      v2Nl1mrOyjwbxRTdnk8yaUlDA720t3cjA43VhzAkZ9HaUIPLYaavz8Shg4cJDvH/7fMzkrfe
      Qmm14r3hBl6vPcwFufkEaTSzrdUJGbIN8tCOv/G5+ddRnrrE52vCSa8BYhNTGRgcAcDslskL
      C2JAp8UhSzQc2ktG2WKCtcop1wXyer2BukC+pKcH1e9/j/vJJ/mwpYnMyCiSQ8N98ox9rWuP
      uYtH9/yL60pvJic6z2fjwOd1gYLUCqxuCZckoVcqyS0px9TXhistHp16anWB1Gq1f9XFmcsy
      PR747nfhpz+lTaelf6iPm0vLffpWPZ2uzYON7GnfSXFCCfMSS094bSEEzUONPLP/P9yx/C7i
      QuOnpS6QSqWaWl0gs9VKfUMTeQUFNNUewhCfik4XQlRUBAvKCugfMPlM6QBTRIjRLM+8PCwr
      lvNRWzNXFpXMaJjZ4jTzQeO7rCu8jOreKnrMXSf8XG1fNesrn+FrK+8hITxxWnXyWV2g0tKP
      D0vE/Pf8QWpgCeA/VFXBW28hrV/PG3U1rEzPIlSrm1EVXF4XobowIoIMRIfEYHMfHyTZ176L
      9468w9fOuoeIIMO0B0H8fh8gsBHmA+x2+Pa3EX/9K7sH+4kNCSU76uSnpKaL6JAYYkPj+Nf2
      v5EUkUx2zMcvUFnIbGv+kIrOffzPym8RqpuZrpIKMQNxRkmSJr0GsNvtBAf7vsTcdNSx9EuZ
      sjwa7y8spP1zV/Je0xE+v2ARyLLf6CqE4M3aDbQPt/CFJXcek8s/nbVBp7QGCDBHeOst6O/H
      edNNvH2kjssL/SvFWQjBq1XrGbT28+VlXx/3QRZf4fcuUGAjbAp0dcH//i/ipZfY0FDL8rQM
      ooP9J8XZK3t5et/jaFQabl50O6pZaKvk9wYQYJLIMnznO/CTn1DhchKk0VAc5z8pzi6viyf3
      PkJSRAoXFV465aS2yeI/c2EA3/Kvf0FWFn1LFrOvq50LcvP9JqDg8Dj45/a/kh2Ty7rCy2Zt
      8ENgBvhscvAgbNiAa/163qit4oqiErQq//iqrS4L/9z+V87JOZdFqctm3SgDM8BnDYsF7r0X
      8X//x+aOVkoTk4kPnZmQ4ukw2of44we/ZWHKYr8Y/BAwgM8ev/oVXHcdddFRuLxeFib5RxXn
      HnM3/7fl1ygYTXDbVPOaXwQ4/N4A/OEtMWd4+23o6GDohuvZ2trEpX6S4twx3MbDO/9OZlQ2
      n1/0Ja4pu5EBaz9uyTXbqgXWAJ8Zurvht7/F8+yzbGyo46K8QnR+cLSxtq+aFyuf5c4Vd2P3
      2NnW/CG9lh40Kg0a1exXmZ79JxRg6ni9o+2LfvhDPrSOkBUVTWqEYVZVEkJwuOcgb9Zu4K5V
      3yYyOAqBQKfS0Wvp4Zqym2Y1+nMUvzcAf/AT/Z6HH4aMDJoXltHX3sYN8xfMqusohGB7y4fs
      at3O11d+cyyvR4GCxIhkEiOSZ023T+P3BhDgNBw+DK+8gvm559h8pJaby8pntYqzEIIPG9+j
      pq+Ku8/+f+jUM5txOlECBjCXsdng299G+uMf2djewnnZuTOe4vxpXqt6kUHbAF9a9nW/H/wQ
      MIC5y9FanjfdxLYQPTGShuxZrOLskTy8fOh5ZCHxxWVf9Qv/fjzMDS0DHM/mzdDdTcdll9Jk
      HGJNVs6s+f0eycMTex9GrVRz/cLPz5nBD4EZYG7S3w+/+Q2Op57iraYjXFtShnoWMikB3F43
      j+7+J1nR2azJvmBODX7wkQGMDHTT1NmPShtMYXYcg8MQqrZgxkBK7NS24QMbYZ/C44FvfQv5
      +99nk2mI5ekZGIJm5+yp1WXln9v/wvKMlZyVdc60VO+Ybnxirh2d3eQWFeOxm/B4XFhGTNS1
      DZIUE+oL8QGOIgQ89hjk5nKguHBWU5yHbIM8uO1PrMldy4rMs2dFB1/gkxnAYAil/nAVLlmN
      QiForq8huXAeChRTrgskSVKgLtBRampQvfYaPQ//mwMdrdxSWj7pa05F12G7kX/u+AvXlN1E
      bkz+mKxPyxxxmHil6gU8soeLCy8nOWLipReFEGP/fIXP6wIZjSMkp2bR3tCAS4aceeXItg76
      TNEkRI6eQJrsmWClUhmoC6RWg8MB992H8/e/Z2NnG1cVzydYN7Uw42R0bTO28OTeR/j8ki+N
      NZ4+mcz3Gt/mivnXYAiK5PHdD/GVFf8z4etN95lgn3xbJQvK6e3ppaBsAWFBGoJ0oNfGYLXN
      frLTZwJZhp//HHHddbynUbIgMoWYkJl3L5sGj/B8xVN8cdlXSYo4fZZpiDaUfksvXsnjt3sC
      PlkDKJRqEpNTiAgNRqnSoNdpQKEiNNT31RzOSN57D7q7qb3oAlyemU9xHs3rOcQLFU9zx/K7
      xjX4Ac7Pv4j24VZ2tm7jc6XXT7OWk8Pvy6LYbDZCpqFXlV+WMDmRzO5u1J//PMbHHmN9bye3
      Lljsk0K249VVCMGBzr283/AO/7Pq2wSfovfudNz/rLpAQoixBahKpULpR+U0zghkGdV99+H+
      7nfZMNjLxflFM17FeUvjZg51VfC1lfeccvDPVU5pAC8//gBdDi3BWhWLV19MaU7STOkVQAh4
      9FGk5GQ+zM4gS60hJTxixi4vC5nNdZtoHmri6yu/hVY9+7n708EpDUCn0bFw4TmkRQZhiI6a
      KZ2O4YzdCKupgZdfpuWhfzI4NMh1JWUz9ixkWeKlQ8/j8Di486y759zu7kQ45Z3lzi9jpLOR
      qqoqBkzWmdIpgMMB996L5de/5t3Odi4tKJ6xFGeP5OHp/Y8jhODm8i98pgc/nMYAnCODVB3c
      j3HYRPvg1NsdBRgHQsCvf410+eW8jpfzs3IJm2K8f7w4vU4e2fUPokNiuabsxlmp1DaTSF7p
      1AZQWVXH2nNXYbGMMGyenRngjDsR9t57iNZWtl+4lvjQcDIiZ8b1HLQN8Jt3fsqIw0SKIfUz
      /eYXsmCwuZedj797agO4+sabaG3rJi45h3VLC2ZKvzOXvj747W/p+OEPaBke4pzM7Bnx+60u
      Cw9u/RMXFV3Gvef9iJ0t26b9mrPFSO8w+577kIHGHsqvW3XqRXDVgb0MmGzkJGYjCxn4bE+J
      s4okwfe+h+M73+Ets4lrS0rRqFTTnmE5aBvgX9v/SmpkOi6vkzZjy4xXaB4PQghadtcz0mUk
      PMFA1orCcb8chBA4TDYat1XjtrvIP7eUsHjD6fcBFixbTaihitdffRmvPpKLluT75GYCnIAn
      nkCOieHNtCTOjksgMmj6Y+59ll4e3vl3bir/AhlRWexp30l9fw3XLbhl2q89UWxDFjwONwuu
      XsGRjw5j6R8hPP70lS88Djdt+xvpa+gi+6xC4vOSj0muO6UB1B7ah01l4Bvf/wVhwf6Zy/GZ
      oLYWsX49+//6Z/SSl/yYuGm/ZMtQEy8cfIrblnyFFEMaAEvTV0z7dYUQOEZsqLVqtMHjn2nU
      Og0uqxOn1YHT4kCjP/WGoJBl2g800VHRROqCbJbfei7K/zZs/OS68sSpEELm7Xffx6B2UVHf
      AcDScy9jQd7kylkEUiFOgd0O115L/49/xAa1glvKFh1T0GqiMp0eJ23DLaRHZp7QlRFCcGSg
      nhcqnuarK79BTEjsxPQ9BePRtW3fEezDVtx2F+mLcjEkn7pV0ydTIYba+umr6yQuL4nojPhj
      xpMQAiELFAoYaO6laVsNMVkJpC/KRfupl/fpUyEUSs5dtQIPavJKTNhdXmLi4sf5GHzLZ3oj
      TAj47W9xX3EFryoFnyssmVI1N7fXzX/2/Ju8uAI+OLKZ25feifZTWZgVXft5t/5N7lh+l08H
      /3gxtg+w4KoVOC0OmnfWntYAPkl0ehzR6cfPjpJHou69SkZ6jMiSTHBkKKVXLCM48vQZsyd9
      2h+8/hyR5Zfy5uO/Iyo8jLRVN3DZssAawKds2YJobOTt665mUWQ0sVNMce4a6SAzOos1uWvx
      SB66RjrJjM4GRt+QO1u3sbN1K3et+jZa5ey4tKEx4bTsrscxYiM2yzctUAeaehho6kEfHow+
      PJjC88oIMozPazhpGFQg43S6+Oo37mPp/Fy8Xt+fdjqjGRhA/OpXHP7B9/EoFJQlTb1aWqoh
      jTZjK2/WvE6rsZnU//r2QgjebXhrrANjsHb22iTlrCwiIjGS1AXZxGRP7TinEIK2fUc48mEV
      wZGhFF2wEKVSgSZo/HlLJ02HdlmH+M9jT2Bxy2jD4/jibTcRop1cGDSwBvgUHg/ceSfGyy/j
      5eREbi4rP2mW50T19EgeesxdJIYno1FpkGSJjdWv0mvp4fald6JRaSYldzzMVDq0EIKRbiNN
      22sIjY0gZ2Ux5t5hBlt6SS7JOK3r88k1QOA8wEzLFAL++U9s3d28/LnLWZOdS8opCtlORU+r
      y8JbtRtQKdVcVvw51KqPjWwuGoAsyZi6hhho6sE6aCb7rEIiEqMmPK7GfR7gwNb3CImL481N
      W7jsxtvITjhJOq4QeCUvAiVqlRIhQKEAWYhZrVPpl7z2Gt79+3n563dwVkbmKQf/VBiw9vGP
      7X/lmtIbKYwvntPBBCEExvYBajdXYEiJJvfseWiDfLOGOaUB7K+sRJK9ZGVls6e6heyEshN+
      bmSgkyOdw0QYDKTG6enoE2g8vWhiskmeYmmUufzFHUd7O+KBB9j+pz+QEhJK1jSVMuw0dfD4
      noe4fsEtpEVmzOlnaB0YoX7LIdQ6DWVXrSBkHJGdiXBKF2igo4Fd1T2UZEahickkOfrEF9+7
      4yOCIqJApScnJYydO+qISk1hfkE2QshIkjTpL8HhcBA0DYWfJEny6TG708lUeDwob7uN9s/f
      wgdJCVxfUjauhtUT1bN56AgvHnyOwvhiTA4TXsnD2oJ1pESkTUnuePClTLfNRdueBkb6hslc
      lk90hu/C8EeHvEKhOPUM0NJQR0tTJ12tSpaeG3VSA1CpdeQVFtFccYARbwhRsTG47HZAoFAo
      UCgUk34wSqXS518UMOYDzpjMBx7AVlLCm3HR3Fhcgm6cRxsnomdVdyUbql/hayvvYX3FM3xl
      +f9gdo7wZu0Gblj4+UnLHS++kCl5JTorm+moaCb7rELy1sxH4Ftdj9YFUiqVpzaAtvZurrzx
      NpIj9ChOkR6bn5NGxf5KUKhI02hxRMcTpjbT3DVEdkrM2Nt/srPAdEzhRw1zRmRWVCC9+y5v
      /uwnrE5LJ0I//hltPHoKIdjbvpOtzR9wzzn3EqoLIzY0jr0duxiyDZAVc3zh3Bm9/3EgZJme
      mg6ad9aSWJTGitvXotKoxhbBvtRVoVAgxH9fzqdygba//SIHmgbRqZUsXXMJpbmBVIgJyzSb
      EVdfzZ77f4IxNoaLcgtO+xw6TO1srttEkCaYS4s+R1jQqeurbjmymaruSr68/OtjMX6v7OVg
      1wFCtCHkxRUel98/G1Egu8lG49Zqjt6+kAXZK4tw2Zw0ba0mJDqczOUFBIV/nAg4q1Uh1Nog
      NEqwjAzj8so+U+CMQZbh/vvpv+5aavRabs7OHddL4M2a17l1yZfpGenivYa3uLL02hN+TpIl
      3qnbSKepgzvPuhud+uPcH7VSTXnqEp/dii9o2l5N3poSGj+qRpYkMpbkseOxzRiSosk/r4yw
      uIgZX7Cf0gAWn3MRi86Ghp0baTTZZ0qnzw4bNuC0WHitpIhrCsffrV2pUOL0OLC5bWhVJw73
      eWUvL1Y+g8vr5ovLvjonji8qVSq8Tg9CCPobuhlo6iUqNZby61bNmk6n/Eb2bX2Hgw2deL1e
      zrt85Uzp9Nmgpwf5z3/mrV/cz9L0TKKCx5/ff0XJNWyqeZ0wXRjn5V503O9lIfPMvscJDzJw
      Xdktp63X5PK6eOXQ89jcNs7LvZCM6ONres4EWSsK2f3k+yAgJjsBjU5D9spin8kXsoxlwExI
      VCgqzfheNif9lMM8SM+QnVVrL0Vv76BrwEhe8uyURplzeDxw110cuuduiIqiJGFi9ZRiQ+O4
      qfw2gONOhLm8Th7e+Q+yorO5qPCycbkM7ze8w6K0ZaQa0nl890PcedbdE9JnqghZZqC5l+Yd
      owvc7BWFqHXHR8Hsw1baDzQSFhtBUsnE9i9kWaZ60z6CDCFYB0YovmjRuHKCTvrq2LLxJcJS
      83nyb79k0+5WyufNzltjzm3iCAH/+AeDhYXsSUrgwtwCn3Vrt7qsPLTjAeYnlY178APo1Dqs
      LgsOj31Gq/sJITD3mdj73Ed0HWql9Ipl5K+Zf8LBL0syDR9WkbYwB4/TQ19954Su5Ri2oQvV
      k7OymNicJIwdA+P6u5M+DYvNyuGKfXQbbYTrvDR3jk/gGU9lJe7Nm9mwbi2XFc7zWSlDi9PM
      g9v+xPKMVazMWj2hF8PZ2efSZepkU83rXF58lU/0OR2OERuHXt9N/ZaD5K+Zz4KrVhAUcfJo
      3tFgZJAhhLC4CJwWx4SuFxQRjGPETvuBRgYauzEkje+cwcmzQZ12nC7P2M/6oBB02smFzc6Y
      MKjZjOrKK3nnvnsxFBWxJCVtyjOY1+tl2GnkkV0PckXJtRTG+8Znnq4wqPDKtO07wkBTD5lL
      C4jPS0ahPP0zGF0Yd9F9uA1NkJaC8xeg1qonFAaVPF6GO4cIjzeM5gqd5LKBbFCmYQAIgXzP
      PdTl5lB1ziquLSkdV20dp8dBZdcB4kLjyYzJRvGpb611sJkn9z/C9Qs+T16c70rTjOf+Ja9E
      T3UbKo2a+IKUU7pPsiTRXd1Oy656UkozSS/PGTuDOxXmRIOMAMDGjViGjWxdUs7N+UXjGvyd
      pg4e2/0vZFkiIzoLj+QmP75o7Pd72nbyYuUzZMfkzcpaqG5zBcGRodiGrDhMNrJWFJ7wc0Nt
      /dS/f5DItFiW3rLmuDO4/kzAAHxBVxfSH//Iqz/4LuvyiwgdZynDDdUvEx+WwEWFl/FG9Ssc
      GawnP74IIQT1/bU8V/Ek967+EWFB4bxatZ7c2Jk9kmruM1Fw/gLcdic171Qc8zshBJZ+E41b
      a1CqFJResQxdWBDqcYYf/YW5pa0/IkmIb32LrV/8AmkZWaROIL9fq9JiCDKwsfpVesxdYwlr
      +zt2827DWyxNX0FdXzUu2UlGVOZ03cFJSVuYzYEXtyFkQdaKj90vl9VB8846zL3DZK8qJjo9
      DoVCMSfbpAbWAFPlgQdobW5i+623cHVRCXrt+M+jGm2DvFO/iWBNCOfnryNIE8SOlq3s69jF
      l5Z9jSBNMFVdlei1+hPm80wFp92B2+IkLNZwykWqy+pAoVSiDdYheyWad9bRU9tBzsqi49YF
      c7FDjN8bgN1uJ3gCu6jjxSdfVmUltu9/jyd/9H1uKl9KsFp9SpmykGkztqBQKEiPzPxUXRuZ
      t+s20jLUzBeXfXWsqdxU9RRCMNJjRKFQEJ4QCYClz0T12/uJyUzAZXVSdNHC0yxwZXprO2jZ
      U09ScTppC7NPuNM6Fw0g4AJNFosF6b772PDl21mTV0i4Xn9aF+Cjpi1YXWYkWabT1MHKrHOA
      UcPYcPhlhh3DfGX51485uztVOg404bI7EfLoplSwIZTazRWExIQhSzIqrRqXxXHCGL0QguHO
      QRq3VhMUEUL5davQh85OV/rpImAAk+UXv2DP6rOJmF9KXsz4Cky1DDVyc/kXkIXM8xVPsTLr
      HCTZy7MHnkClUPH5RbejUvr2KzF1DVG8rhwhC2o2V2AdNFN8UTmtexvoa+jCkBSN7gSD2jFi
      o/79Q3jdHoouWEhIdNjc25UfB35vAH7ZH2DjRrqbGmn4wX3clHN8iFIImVZjC5Is0TzUiM1t
      ZW3+OkoSS3l097+wua0sSF6Ey+vimf2PExsaz6qs1bxW9RLh+ghW556PWqnGI3nwSJ4puRVx
      uUnUvlsJQhCfl0xQRAjNO2tRqpXE5yWTu6oYpepj98ftcNH4UTUjvcPkrS4hKi32Mznwj+L3
      awC/WwR3duK69Vae/P69XLFi1THV3I7K3Nq0BZNjmPr+WpIjUlmdex7v1G2iLLmcp/Y9RkZU
      Jj3mbmJCYpmXWMp5eRfy2O6HuLjocrpGOjA5hsmJyWNz/ZsgYGX2ORRMYQfYabaDAvRho2sp
      t92F0+4gLPrj/Huv20vnwWZ6ajpIKc0kuSTjGMMYD4E1wGcdrxfx3e+y6aorWDyv9KSlDBsH
      G0iOSMXqsmC0DxEXGo/T66R9uJWMqCwEgj5LL+uKLueszLMB8EhuYkPjEMi0D7eyrfkDrl9w
      CyqFmmcrnpiSAejDjw0iaIN1KLWqsaOBg8291G85RGx2IouuX4VG/9nsCHkifGYAQpZweyW0
      GjWyDEoleCWBxgfb4f6C+Pe/qTSEo1izhvkJJ69rqVZq2Ne+C61aS6uxmYd3Psi6ossxO0d4
      tWo9evWozx0VHI3T40Cn1rM2fx0P7/w7WrWOa8puYnfrdg52V6BX6YkOHn8B2UR0t3YAABzk
      SURBVHHfixCYuoeof+8QQYZgFt94DroQ/2uMMd34yAAErUcO09TnZGV5Jh29ApWrm6CEPBKj
      Zq8OpU85eJDBF55n/y9+xi15p+5OIpC5bekdKIDN9W9y25KvANDQX4ckS6zOPR+L08zrVS8R
      H5ZARlQW5+Scx51nfWNMxprctezv2IPdbePS4it9dhtHu6Uc2XoYj8ND/nmlGJLO3HMePjEA
      l9WIlRAMQTIgaK2vIj4rm8zIECRJGvO5JoMkSdOywyhJEyj2a7UivvtdNtz5ZS4sLkF9kl3P
      ozJXZqxmQ9XLAKzNW4fX66XH0s3zFU/xhcV30GZsxWgb4op515Adk8uT+x5hcerysdj/URYm
      Lx6VKXyzyyp5JDr2N9Jb30nG0jzi81N8uoM7oWc6To52c/HlUvWTMn1iABX7DqAxxNDe3kpG
      VjxJqWlYrWYEAqVSOaV6MWq1enbrAgkBv/kNby9aQMnKs0kxRJ7wY06vk80NmwA4P38dd5x1
      Fz0jXYw4TTQM1vLyoRf48vKvkxA26jo1DNRxuOfgWHBAr9WfcKfXF7V2hCzoPtxKy656Mpbk
      seILa5FkaVoWrNNRa2g6FsEwWhfIh1EgL9XVR8jNiqdnUBCusWD0hpKdEjO3d4Lfeouavz/A
      4Ztu4BqnB+Vll0HM8SUNXz74PEXxJWg1WrY3f0RZ8kIOdlfgcNs53HuQX1z8e8L1H9dWFQga
      +uvoNLWzNH0FoboTlz6ZSmRFCEH/kW5adtURmRJD5rKCsUzNuVgc11dMUxRITXHxaLpseipA
      NCd+V84h+vow/ex+tn/xC9xYcRDlJZfCj38Mf/oT6I9dMNo9duJC49nbuYvGwXpajE3kxeYz
      4jSREZV9zOAHUKAgP66Q/LgTpxhPFevACA0fVgEKwuIM6MODUU/yQNNnGb9/IjOyESYEPPAA
      VFRAWhr88IcAeO+5hw03Xs9aGULPPQ/OPhvx5pt8uP8l6jFiCDLwudLrsbosjDhM/GXr7+kc
      bmNN3lqCtSG8XbuRs7PPJSZ0eorgngiXzUn9lkNYB0YounAhffVdRKXGIssyTTtqyT173ozp
      MhfwewOYEdraYHAQHn0UfvlLuPVWhEbDtmA96ZdeRkZUzOib/913MRuC6NZ5uKP8Lna37eDF
      ymep6a1iSfpygrUheCQ3bcZWavsO842z7yUzOntGenF53V5ad9fT39hN1opCSi5ehEKppH1/
      E4aU6DF3KMCxBAwAICICenqgrg6efhp+/nNaf/dbOr7zLW5MywC1Gv7v/8BiQRcWhG3/YwzZ
      BmgeaqSur5q40Hj2d+zB5XUx4jARpgunLLmcNmMzS9KXn/SybocL54idsHjDFGpqCnpq2mnb
      30hcbhJLbl6DWqsePayyrQb7sJWKl3eg0WvJPsmJrjOZQCrEUWpr4amnoKkJe1cnT15xKTca
      zYQXFMCttx7zt32WXrY1f8DhnkOkGFK5bsEt/PCN72B2mtCr9SSEJ5EQnogsZL6+8lsnvq8h
      Mw0fHSYsNgKP003BeWUnyCkSOG0OdEH6j9MSBNhHrFj6R9DoNBzZWk1IdBh5q0vQ6LVjMipe
      3kHpFUuxGa10VDRReP6CY/L+A4vgQCrEsRQWwi9/ibj1VjYtWcTq4vmEZ+fAs88e99H4sAQu
      Lb6SXnMPPeZufrLpXszOEa4tvYna/moigyKxexxEBp98g6nvSDeZS/IxJEdz6I09SG7vMfVy
      hBA076jFarSgVCgoWLsAjU6DdcjM4U17MfeZUKqULL1lDWFxx59CU6pV2Ias1G6uQPJKNG6r
      JmfV3O4UMx0EDOCTvPUWFYMDhFx/DfkvrAeNBn7602M+4pW9vF71Ervbd5AXU4DJPozZaaY4
      oYSSxAX0Wns4N/cC6vqqT2kAcTlJNG6tJizegEanQfWpCI3L6sRldVJ8UTmDTb0MHOkmJiuB
      +i2H8Lo8lF+7kp7aDrSfSF+wGS10VjYTm51IwbnzObxpH/qwIIrXldPw4WGcI/Zxtw89U/B7
      A5ixN1Z/P4M//QmHf/ULbjrvArjk8qMKACDJXpxeF7W9h0k2pJJpzcbldWK0D3Fe3gXkxRXS
      Y+7i+gW38H7DO8SFxbM0/awTXkoIgS5UT8H5pbgsTsITIo+7T41ei8fhZrhzkP7GblQqJc07
      a0mal4FKrWKwuRe1TjMW1/e4PDR8UEX+mvm07KknbUE2BeeV0ryrnpHeYVwWB5o5VK1hpvD7
      NcCMbIR5PHhvu5UXli1h7Ze+QmxIKEIIhuyDhGhH/7++8mmUCiUD1n4KE+YhSV42VL+CzW2l
      PHUp0cHRXFVyPaGnqeUvhKCzshlT1xCSVyIiIQrLgInYrEQSi49tY+S0ODj42k5GuofJWl5A
      xtJ81Fo1XrcXl9VBcGTo2DN1jNho2d1A4doyOg+2oAvVE5edhLlvGGP7AAmFqejDPj74ElgD
      BNYAH/Poo2xVQPG1148N/jdrN2BzWzHZjSRGpFCavJD5SQv40we/5Z26TZidI8xPWsDFRZfz
      dt0bXF12AzrlOLIpBbTsriexKI3QmHD6GrqYd/Fi6t8/iCE5esxFGek2Ur/lIMFRYcy/fNkx
      TSPUWjXqqGMNTR8eTFB4MJWv7EQXqidpXikoIDwhcuwscIDj8XsDmPYJqqqKliefwPr3v7H6
      vynOXtlLj7mLLy79Kl0jnbxR/QpDtgE6Te009NeSEJ5MdnQOpckLyY3Np7rnEBanBV2wHtkr
      MdTahy4s+IQNH7oPt6FQKlFp1BzetI+keemjv1CAAOwmK03ba3Ga7RScX0ZwdNi43qoKhYKM
      pXnH/Bzg9Pi9AUwLkoTikUdGqzpUVrL7m3dzZXHJ2KBRK9VoVBp2tGyl1dhEafJCDnVXUNdX
      g1f2khmVRU3fYXotPbQNtxCsCSEuLB5ZkqnfcojQmHAGmnqJz08+rruhbdjCvIsXYekzERwZ
      SkRiJDVv7ycyJYbOymYGmnrIWVVMXG7ShDM1A4N+4pyZBrBzJ4rmZoTXy/sLSzl75dno1R+H
      ILtGOnB6nDQO1hOsDUEIGZVCRa+5G41Ky5B9kNuX3MHO1m1cWHApMSExKBRKZGScFgcF55eN
      Viref+Q4A0hflEvt5gpkSSb37GJishLxuiVa9zaQsSSfZbedh+ozdIjI3zkzDaC+HuXDD3Ow
      pJiEjAySdMf67jtatrI2fx1G+xDbmz8kWBPC1uYPOCf7XLrNncxLKCUzOptdbTsI0YYe00HT
      kBxN7eZKXDbHCfNudCF6yq5cjizJDLX0sfeZDzCkxLDstvPRnKBufoDp5cw0gMpKBmNjabvh
      ei7bsOmY9Oaa3ir2d+zhnfpNIEASEk6vk0WpS7C5reTE5LGjdSu72raRHJGK/lOHWDKW5OE0
      21HrNCc8WyuEGO1+/v4hVBoVJZctIdjg2+7nAcbPzLUL8ReEwNvWxtbLLua8rl4UV1wBgMPj
      4PWql3hi7yOcm3cBLq8TnVqHJHuxua2szFpNr6UHQ1AUmVFZfO/8n5IRncVbG1+j4qXt9NS0
      A6N+eFBEyHGDXwiB2+Hi8Ma91GyuIOfseZRdtSIw+GcZv58BfL2wE488wg5DGPNvu50QnR5y
      cwF4vuIpFqUu5a26N/BKHsJ1EZgcw4TqQukZ6eLZA09wSdEVlKcu4aWDzyGEwOPykFiQSooy
      hcOb9iELQVLR8U0xPE4PbXsbGGjuJWNJHomFqT69pwCTx+8NYKq0Dhup7OkiSKNBV1NL+iMP
      o3r8MdKzc3Ej83rlM7QaW2gfbmNBcjmrstfwQsXTZMfkEqILRavSsjhtGR2mds7JOQ+ARalL
      ea7iKQyucHQuNR2mJsITIhls6iEyKZrgyNG3uizJ9NV30rqngbi8ZJbcdM64uxcGmBk+09+G
      W5Ko6O7k4vwi/rPtA9b+4Q/svudu0oOCsLvtbKx7lf3te7C6Lbi9bh7d/U/USjVr89dhCI6i
      09ROp6kdo30IQ9DHCWfFifMpTpyPEIKOiib667uIzU5kpHcYt81FkCEEU+cQNW8fwJASTfm1
      K4/J2QngP/jEAISQsZjNqHVBBGnVeGVQK8HtFZPuK/ax7EluhLndMGICIRBCZsUTT9Nw1llk
      n7WMis497G/twOKyMOwwkhyRSre5E5vLylfP+gblqUt5p24jTo+TCL0BhOCCzIuRvNIxIUqF
      QkHawhyMbf0Y2weIyU6gaUcNCpUSBbDg6hVjs0EA/8QnBjDU24XZKdHdXUNpSTa9A6BwdhGW
      XEj8bJxDNRrhxz9Gq1ZTrtexJyWZyI4O+r/2ZfbVvUhOdBLVw32E6sJwehx0mtpwep2kRaaz
      KG0ZABcWXsqFhZcihKBt3xH6d3fQ424lJiseySuTXJI+5s7ow4NJX5xHT007pm4j8y9fSkxm
      fGBjag7gk9EZk5BCqM1EV08/KiU01VSSlFdAdkQQkiQhSdKM1gVSvPYaXH45ildeIWnXLsJ6
      uln/jwcwaAUFsemsyVnL4Z5DAEQHRzNoH0SpUCLJEnanDe0nQpuSV2K4a4h5lyyiY38TfY3d
      JBanUftuBQVrFyBLMgqlkl1PvIc2RE/JZYuJTIvxWY2c6ai1M11y50pdoKNlUXxWF8hi7KGq
      uZ9lSxcjOQdIz87BbDYiSBvL4ptsNqhKpZp4huGCBfDLXzIcFoY0OMiBtedztkZHk1bwfv0e
      3JILIQShujBkBHq1ngUpi7C6LJjdIyToP+7srlKqUKtVDLcN0n+km8yl+cTlJtFT1c5AQzdN
      22twO9wkFqaiCdEx3D6IITHap43ifJ1hOZ1y51o2qE/SoWsqduNUBqFWacnJimPICOFaK0Pu
      YLKmWBdoIkciRWsr9v/9X7QaNRqrDemVV9i/YhnBKhXvfO1yOt2NCNmKyT6EJCRCtKHYPTZC
      tWGkRWbQNtzCH654gGDtsdfzON301nWi1qrpa+jCbXdh6hwisTgNIUl0H25HG6JDqVax4KoV
      dFW1UnTBwgnf64mYjhTj6ZJ7xqZDFy1YeszPo+n7UUSc8NPTg8XlpO++79J42aXk//4PpDW3
      0J2USPMlF2JMFdSYK1ApZAx6HWqVGpfbRUlSGU2DDazKWsOgbQCtWoteFcRwxwAh0eGYuocY
      aukjbWEOKaWZuKxOemo7ELJg6efXMNTaT1dVK8mlmfTVdSJkgS40CMkzPW5LAN/j92HQ8c4a
      DQP9RLW2sPwvfyWouQUX0FZWyll/+DXvf2E16UtzaRxowKIIxea2EawJJkQbgtPjxOQYBuD6
      sluoeXs/IdHhNG6rwevykFCURsXLO4hMjcHUNUTBeaVjCW7tBxrJWJxLzTsVeF1u9OHB1L9/
      MFB7Zw7h9wYwXnI9XuqiY+jW6yirb+DguatJPLidQwURJO2tpjLCijImjMTwZDQqDRfkXcyg
      fYCC+GK+sPQOYLQjopFeNHoNKBREZ8SjVCqwDVtIKc2k4LzSsciPZWAEl9VJy54GdCF68teU
      kFCchj7ks9VD67PO3DcAIaCnh859+9AKGWv5Qpr7exlMCCGiEd6+uowrP+xD4wW1SkOKIZVL
      ii7nxcpnUSpVxIclMGjqp+vDZkzdQzhMdiwDI1gHRuitbUfIguSSDNIW5RzTSbGzspnidYvQ
      Bmk5+PpuMpbkz8k+uWc6fm8Ap12jb9mCuOoqCsxm2ueXkPzgv3jsdz+kWbOPcm8CVz61l5qC
      GLpio5gXnY3b6yIjKpvixFJuXvQF6vpqWP/0f0juSUClVSNLMsMdA8TmJKJSx5OzsoiwuON7
      6RqSouk61EpIdNgxxxUDzC383gBOy69+xaDBwEBhPnn7DvDQT+/BEZ9AipxCzSVadjvNhOsj
      OD+pDIDkiFSGHUM4bXY2H9hIq7WFaHsUKq2KiMRIjB2DIAQavZbMJfknPU+bUJTKUGsfbpuL
      vDXzZ/KOA/iQuWsAQoDZjBACY0w0I9HR1CxdzJ70AeS+V5AkG4LRk1wur4uq7kqSDam43C4K
      PQUstJShzNChbgC7YwSvy8tQaz8qjZqcVfPIXll0ypNZCoWCmMyEGbzhANPBnDUAeXgYefVq
      REM9uW4PfelpHFqQjiScqJVRSJKVhSmLUSlVtBqb+e55P8bhdNC/pYMRyxAjrUYyE/LpbWsh
      rTwXfXgQw+0DZK0oJDojkMZwpjBnD8QYn34KVVUVXo0GV3Awg4lxvL0iGAk3Lk8PWqWW9v4W
      OodGG1BEqqLoeaOZwbpu7CYbNqOF2ncqSJ6XjuSR0IcFow8LJir1s90XN8CxzMkZoHdoEOVf
      /waA3mqjdskiDF3NxBlD6Y0bTUEoj1uMVyuxQLWQ3JB89j33EabuIWRJpqe6naj0WBbfcA66
      sCBcVieWfhPF68pRBg6kn1H4vQF8+m3scjgQ111HbGMjKBR05mQzohnhzasL6IpRo1aqUSqU
      9PX3cHnG5wh1hNC2u4Gh1j4UCgWaIC2S20vRReVj/XP1YUHHVE0LcObg9wbwafrqaknctg0A
      i8GAQpYIsthpzi3AHKpBCJnCmGLWGM/BUWWmu7MZXWgQKo0KWRJ43V4Kzi3F0mciOi1ulu8m
      wGwzpwxAWK3Ef+MbqN0eZJWKweREjBoj//7SAuSgMMI9GoKDQyg2F4IEXreH+PxkDEnR9Df1
      oNaqCYoIwTo4QvbZk++8HuCzg98bwCc3wqSf/Qz270dWKenJzKDLYOfZa0uxhOowuNUIBPm9
      uYQIPZ5gFwqlAuuAGVCALFh6yxrsw1b04cEo1HN2/R/Ah/i9ARzF6nahf/xxhmIiUCjU7J8X
      ws7yKBSyIMwTSqw9hmRbIjG2SFzBLrJWFP63VdAIkakxjHQbcVocY80kAmkLAWCOGIDV6aD2
      +9+jfGiIyGA9L15Xzt4FMQyFCUK8oZzfvhqdrEWlViErZLKW5mPqHqL4wnKGWvuwGS14nO5A
      c4gAx+H/BuD1ovr6N1j05JMIBOuvLsasc+BRCdIt6cwzFmIIjcTjdCN7JSJTYwhPiETyeNEE
      aSm5ZAm2YSthseEolAG3J8Cx+L0B6HftQvXEEwDsW5hAiNlCcVME+uSzMXgMJKQmI3skgiKC
      yViSR1hcBPZhG/n/bTqn0qoJjz++h1aAAODnBiCEwLj+BWIAU4SO/rQskjSL2Xt+GB61gzhX
      LLZBM8XrFhGRGElo7Gg9fkPyzDWmDjC38VFdIIHJOIg+1IBOo8DrBY0anG6ZoBMUiB0v0ksv
      ErT+WezBempWX00c4XRqGgjmAsItkQgFJBSmkjw/I5C+EGBS+ORQfEfDYazqMEz9/ZTNS6ez
      TyDsnUSmFxMbrp/UoXivxYxlRTmHDC6yByJQyWpw9PLRTd8kLCyd+PwUgsKDyD2n5IRVmE8r
      f44cCg8cip8Dh+L7LA7Ky+dRYzbilCSaqg+SXFBETJh+rC6Q0+kc+/wnDeFE9idkQVdtLRvP
      T+T2JyoItfbh0KvY9I0fULTyXFIXZqMN1qFQKPDIXtw2zwn1OtV1jn5Zp9Plk3JO9/ujhj5R
      XU51HUmSxr78icg43WeOyp3qPX/yM582AF88W2DMAE70GbVafdKQ9smuf7QukFKp9I0BqBUK
      vLJAEjIqhZL03DzMpkFkUse+PI1Gc9oZQAjBYFMv+7fv4EPPW3zlzSOEWl0oZUHn137AJXff
      TVicb2pNzJU3YGAGOP0MoNNNrAaTz+sC2Yf7qG7qJCjUQF56NP3DggitnQGnbtx1gayDZho+
      rKLF2MSBiAq+us1IfEw2hIbgLS1Ft3qNT6fBuTIAAgYwBwpjnY6TGYAQAo/DTcMHhzD3mlCW
      6Xl/8F3ucBcT8+RL8NRT2NzucRfGmghzZQAEDGAOrAEmg8fppn1/E30NnWQuK8A1T2Zzw1vc
      mXcD0bfeCevXg0YzWuU5QIBpYsa3RoUs6KlpZ99zHyGEzOKbVtMW1M6HTe9z91nfIuInv4H7
      7oP4+NMLCxBgiszoDDDSbaTmnQOExkZQft0qNEFa3q7bSONgA19b+U1Ujz+FKi4O1q0b+5tA
      fD/AdDJjBlDx8g4UCgUlly4hNCYcSZZ4s/Z1eszdfHXFN5DqG1A+/zyKV16BQM5OgBlixgwg
      bWEO0RlxozFoWeK5A0+iVqq4bclXwO5EvvsudH/+C4SFzZRKAQLMXBRICDHmzhzuOUiPuZvz
      8i5EqVBi37KFoN5eFDfeeNzf2u12goN9X3ntkxtMZ5rM6ZI7HTKnKwoE/+1ZMRMGMBXO9AFw
      pt//dBuAX2eDwvQtgqdD7lyROV1yp0vXk6WXTJZP6un3M0CAANNJINwS4IxGdf/9998/20p8
      GtljZ9fuvXR0dhMTH09TYwsRwQoOH+kmITZq0nI7mutpbe+ko3cQlduGVxNC55FqlKFR6DWT
      9zEHOo+w62ArWYk66tpsYOul367AEDq5Yluy7KZy/376B0wYYgw0HmklPAiqm3qIjz1xterx
      0Fh7iPbuHvqGzMj2EWR9KB31h1GHRU/4/oUscaTuEC1dJpISoqk/XEl7eyc2SY1lsANdWAz1
      VQeIiElErRy/a2Q29rFn+y4iUrOQrIPU1DXQ1tJKaHQcbc0NBKtlGruGiYmKYLxShwe62bt7
      HzGpmWiVMNLfwfu7D5OVEu+fM4Cxo4HE/MWUZkXT2juC3Wbm4OFGCvIzpyQ3JTOP4oJc3E4H
      ksdNf1czTk0kEUGaScuUvU46B+1E6JUgZEaGB2jtt5M2hWOYI51HsCtC0Qbp0SgU/73/Jgry
      MiYtE8Bic5CWlobLYRu9/84m3PoYwidz/wolOflF6FUCJBdmt4YF5Ysw9XbgcTlpb6whJD4T
      nXpi64IwQyxZKfHIAoLDoyktnU9EkAq3R8ZmNlHd2ElORsq4Bz9ARHQCaYkxyAKE5KG5e5jo
      cC0g/NMAhJBRqpQolUokWcZhNeP0CpRTXGRZjD3srahhwcKFICQGB41oddoJPcxPc3j/XoLC
      wzAah3C4JUaGjaDUoJiCVLfbRVRCCsmhEtVtgzisZlzSVO9fRqvWMDQ4hEqjQQiJwcFhtFrN
      pDRVKBQoj77ZxbELS1nyMjQ8glYzccM6pnCB8HJgz26C47OIi9BjtZjwyDCBCQU4dhHdWH0A
      pT4Uk9GIzeHxTwOISs6m7fBuKup7SE+IIDwqnvLiDCoP1U1BquDA/gqCQ4Lo6OwCpZr8knI8
      xjYGzc7T//lJyC6aT2xEKFqNDpVSQWJqDkkRgsaO/knLjE7NZbi1miMdg0RHBBMeFc/ConQq
      quonLRPA7XLicDpxOt2gVFMwvxzXYCtDlonfvyy5qa+poa2tjS6jDZ2wcrCyguCoeFQaHWWL
      ltLbeBibe2IdM4393TS1ttFQX0977UGMXg0WYx9Wp4eouGSKM+Kpqm9hIqGbgZ4OmlvbqG9o
      JDGzkJTYCDRaLWqVwl+jQAJZHlXr6JtFoVAgy/IUQmICWZI5erOfljO1EJ5AyKBQMCZfCD5+
      Q05CniwLBIy99ad+/x/H1E8kY6L3f1TW0b/9WD8Vo09BwdGnMRHZR1OVj/7d0f8f1VmhAFkW
      KBRKxiv2kzKPpuXLQkaB3xpAgAAzg1+6QAECzBQBAwhwRhMwgABnNAEDCDAHkKmu2Mv27Tvo
      GRw55jcHt29h2O7k/W07JyU5YAAB5gBe3nhtIy6nlX/+/d84nBY2v7mRitoWWmoPYXW7qaqp
      xz7SzxsbNtDcNThuyQEDCDAnsA73sW3rVuIy8/BaR7A6nLz4zBPYP1ET671XnqPb4sJms49b
      bsAAAswJErJK+eGPfoTUX8eBPTsxZBQTHaFDkj/+zKI1F5GodbNjb8W45QYMIMAcQElUsJv/
      /d0fyVq0hpL58znwwdskZRaQUzSPEK2GeQV5WIyjBdrKFy4Yt+TARliAM5rADBDgjOb/A1y7
      SO7oEB96AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Countrywise Batting Performance' width='192'>
      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
      Q98AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Countrywise Bowling Performance' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Player Batting Figures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Batting Formats' width='192'>
      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
      Pa++1erN/H+qH/eTMaQjvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Player Bowling Figures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Scores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Strike Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Wickets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3dWWxcV2Lm8f9dameRVSzuOymuIiXKlGTJsd3uVpxut93TdruDTD90kABB
      Bo1MXoLBvDfyMBjMYxBggAQzg85MOnbcdryoE7dst+OW27ZkiVq570uRrCpWFWtf773zQIu2
      WiIplkiKdJ0fQKAW3lOnDvnd5dxz7pUMwzAQhCIlP+oKCMKjtC8BSKfT6Lq+Hx8lCDuyLwHI
      5XKIPa0ip6W5cP4t3jr/bwRjKd5+552dl6Fn+fdfnef1N/6FsdmV7X6ZC2+fJ7PNb4ldIGF/
      5BN8fnuOlio7//DKm8zMzqLlkrz9z/+Pf37nA1YXxxme9eGfHWZ6KcQH53/BOx98Sirm4/Kn
      lxidD4CW4bPr43S3N/Hzf3qFTDzEK//3//Dx4CjTtwcJxDN8eOFdktkkn1+5zfzMLNo21RIB
      EPZNJhVnZcWHopoBMAwDR6mb4d+8RcAo4d/f/5CPPvot8aWbePMe4pOfMrqwzJu/vEh9RSkA
      wcVJXn/9X6hv6+JXb75O28A3uH3xlwSCK1wavMXlT37LzSuXmQ1vt+5fJwIg7BtJknHVd/GT
      P/4BAIGp68zFzbQ0lKM4anHhYynrwGU2GL15FanEg2roDDzxNE67BYDqtj7+009+wtr0MDkJ
      8vk8umHQcrSf6xdeY+D3X+Dd8+9zvL/7geqk7tm3FYSvUm288B++x+Mn+wB44sxZKlo6Kb3+
      S5zdZ/DYJLpbaikvPUlDbyPPLoZZjkvU1dahmr/YkVHMdNaXcf5fL3DuxR9wrNnNO2+f57Fv
      fZ+qyjqeeOIJHn/8MfKxCG0eB8knzmDaplrSfpwHiMVi2O12FEXZ6486lJLJJHa7/VFX45FK
      RZf52c8v8Cd/9mNsprv/T/ayfQ7VLpCWirAae7B9uzsS0TDpnI7f7//ytbCfazduMjw6QU4r
      rHt2YXYGbZdWHdlsdtvfSUYCXLt+g9HJWfQtPjcYCt71fGZm9oHrsbgwTzb/4O0RDnhZWY3e
      /WImysxS8P4LAJlElHg6d8/rttJafvKTP7nnnx8erH22sjgzzs2bN1kOhPndpjtUu0D5eABv
      0kM6uMBqJElnTy9B7zShaIaung5mJsbJ5Ay6enuJ+Jfwh+O01LrJGXE+vvgxvY+dpqutkZjf
      R0P3caTlIWZ8EUqVHDXVLryLa2i5CPFkCmQzuVyO9u6jRHzzhGI56ipLWFwKUNPYxlrQTySR
      wFFaQWtjzZ5/90RklZrWo5hCI0z6E9iSS4SiKdo7O1iLxKmrcrPiCyHJOoaWZWR4FKurksDy
      Asl4lPLaZhxSmtnFFSrrWyCzRjQaR7G5aGusZHx0jLnlAOUVbpbnAmQVC04liy8Uo7Wjm9DS
      DIlUBndNM3WVZQAsrqySywWoqehnfmqcSEqjs6Wa6elJooEljhxpJpY2UDNhDEcF+WQUt9NK
      HpgaHyaZzlHTdIRKV8mett1aPMOxY31c/fxzKlwnmBwdx7CW0OC2Hq4twB02mxVya4xOePEu
      rlBdV4eiZ8nKVvp6mpkYn2JsZIyWtjbia340UykNTU10tTV+UUKe0ds3uDnlo8btIOBfBXIs
      L60Sisbp6u4llUzQXF3GajDGyPAIbUdasVptSJLOyOgEsmqmvbOHaNi3L9/Z0PKMDd9kaiVG
      ZakFm82Kng0zORfCv7RIdGWGpGwnEAgwMzpCTXsPzXVVmK0Ouo92E1jyYrFakSUYGR3BHwzT
      2t5Fei3I4tQE7qZOmuur0XIJJmdXaWmsxWqzQS7O6NQia9EE3Ud7WV2eA0DPREF1YlV0UprO
      oneZ6to6TDKUlVfT3uRhZTXByuICq+EwQb+fQCBAJh4mksoRiac42tPBsnd5z9suGQly48ZN
      DJMDRVGwWs3Mjo+jq8rhCYCu68TiSWyqzpQ3RPfRTpS8zolTJ4l7R5kLplFkGS2bRTGZ8FTX
      UvpFz8E64ysn41S6+/o5e7yVae8quqGTy2TQDANFUVEUBbPZhCxJAFTVNWC3mBgenaCzu5sS
      i4qsqKiKgizvTxNKikpraxMaZmxGkpnlCF09Hch5nfISM7cWY7RWr69JZUVG13QMw0A1mVEU
      GVmC20NjdHT3UGo3I0kKZpOKLEvomo4sS+RyOUCiobERkyIzPjVLd3cnJgkU1YSiKHzRJPiW
      l0inYmTzWRYWVxk49TjB+VGWQinMZjOyIoOhIpNDNjkgHUQylW58H5PZjCLLSEh73nb2Mg81
      LjsWRwlr3nGy9hqaaytRHW6Un/70pz/d6wpks1lMJtND/bP4FmcJpFS6WuvIJcKEEzk85R5i
      4RXimoXWunJGRofJaCa6O9tQZBmHwwGShNnmwC7nWQrG8LjLAJ2Z6RnWUhqdbS2QibESjFPu
      qcBVVoLD4UCSJByOElSzBavFhMPhQJXyLC6v4i734CpzYnc4kGVp/XMeQjqdxmq1bvk7EhI2
      ZzmNVU584QxW0qwl83g8FdRUlZE1TFS4SpEkibqGRhamxkhpCq7SO99Hxl1mY87ro8xdTnlZ
      6cb3rKqvY35iDMNko6qyAtVkxm4zo2eTBCJJyssrKHXavtIuDtLpPG3t7dRWV5PLpoiGAmSw
      0tRQg2oy4bBZUFULThtYnNU4VIOy6jrsFhWT2YbVrOCwO5BkGYfD9tDts2XbSRLV9U0YqTXM
      rhrCS3MoFgeVlZ4ve4GSyeRDH2xsJpVKYbFY9nRtaWg5IokMrtK93Z/cC4lE4qFD9HW2l+2z
      cRBst9v3rKtJUZR96QZ1e/a0+D3lcrkedRUOtL1qn4J7gVa9cywGI5SUVdBW52ZoeAxbWSVH
      mmuZHh8moZnp7e5Akfd+H08QClVwABb9QY72HUdVFSZvDVLf2c/S6A2C1gwJpYIG2xrTvijt
      NaUbB59iROjmRNtsba/ap+AANNRWMTE2SiytIWPQYVOJmUwEQkGcVfW4LQZT3jh6VQm6rqNp
      mvgjb0LTNDRtu3GLxWsv26fgAOiSie6eLq58PkhlmZWlUIJQOs2RtnomlpexmKNUVxxBUZS7
      foR7KYqCqh6qc5L7ai/bp+BS7RaFkZExOnuP4XJYmJ4co6a5E6e7jPrELHHNwxFPcY9vEQ4+
      MRjuAFhbWxO9QFvYy/Y5NGeCBWEviB1P4VC5ceMGkUiEs2fPcuHCBVRV5dy5c7z++us4nU6e
      eeYZnE4n2WyWd955B6vVyne/+91NT8KKLYBwaCQSCaampvD7/Vy+fJnq6moGBgaIRCIAPP74
      4zidTgAuX77MqVOncDqdeL3eTcsUARAOBcMw+Oijj3j66aeRJImlpSXy+Tzvvfce6XSaxx57
      jMuXLzM0NARANBrF5XLhcrk2AnI/IgDCoWE2m/n4448ZHBykra0NTdMoKysjGAyiqiput5t8
      Ps/Y2Bjt7e0MDg4yNjZGY2PjpmWKXqADQPQCbe2r7aPrOqurq1RWVjI6OoqqqrS3t3Pz5k1M
      JhNHjx5lfn6exsZGRkZGsNvttLS0bFq2CMABIAKwtb1sH9ELJBwaq/4Vlufnd7xc72MnkTdZ
      +YoAHDDxeJy///u/5y//8i9RFIW/+7u/4wc/+AFVVVWcP3+e2tpaTp06BcCHH35IIBBgYGCA
      9vb2R1zzvZeMx1nxLux4uZ4TA5se7IqD4APmo48+wu12YxgG169fx2KxkMlkWFpaIplMkkgk
      gPULQvn9fl5++WUGBwcfca0Pr4cKQGItwHIwip5LcOP6DW6PTKDpBr7FWabmlsTozx2amZnB
      bDajKArxeJyhoSHq6upIp9P8+te/5tixY6RSKQzDQNd1VHV9/rK48nbhCt4FMvQ8o8PDGGX1
      2JNZnA1dtFVYyUSWWVjTqTEHWAiW0VQhpvo9KKvVislkYmZmhsXFRRobG7l16xYAra2tDA8P
      4/f7mZ6exuVykUqluHTpElVVVY+45odXwb1A8+O3MZV6WA4laK+0MeldJZvVaPHIpMp6aLGE
      uOLVGeioIRaLYbPZRC/QJiKRCGVlZRvPY7EYJSUlSJJEKpVCVVVMJhP5fJ5sNrt+tQdVxTAM
      VlZWaGpq2rerUzwKd9pncWaaieFbO17+G995AWWT4dQFbgF0VlbDmCJR5gJpOprPcuJ4HZO3
      rqHbSohH1ohYopSV1WzMA7izuRbu9bvj3d1u98bjO6f2AVRVvefqCMVw8HunfWSlsJArqrrp
      fIICAyDz+O89jZ5NURlOYKRj3J6axOwop6a2ieTYMPNpE709pdsXJdzlyscf3XP5vu3UN7dQ
      19i8J/X5unuoblDZbKOhev2aLsc91Ruvt3f3PVytilg4uLrjZTyV4higUF/fHUdBeAAiAEJR
      EwEQipoIgFDURACEoiYCIBQ1EQChqIkACEVNBEAoaiIAQlF7qADk0gliyTSGYRAK+IgnM4BB
      PBomuBbd8ZgWQdhvhc8HMAyGrl0mU9JAS0megO4gPnWd/t52bo0uUqqmybf3U11a+L2dBGGv
      FX6HmIVJyuraCCdyLIQSnBzoYS61xrx3luq2XlrMIQaXQ1Q4qtE0jXw+L2aIbeJO+xRK1/WH
      Wv6gu9M+eoE3Nde2aJuC5wMMT8xQWlrCXCBNS5WTlG6Q0XWcdjuRVJq0nsZmKxPzAR7Aw17/
      Xpblr/X9BQ7kfIBnfv/baJk4zpUoTRU2bgxexeIoo6O+hdUbNxgyVPpPtBRWvCDsk4dabSiW
      Etqb129Levr0qY3Xjw+c2mwRQThQRDeoUNREAISiJgIgFDURAKGoiQAIRU0EQChqIgBCURMB
      EIqaCIBQ1EQAhKImAiAUtYLHAnlnJ1mNxFFtZXTW2vns9gJuVxndHS0M37pBRlfp7z+OWRUZ
      Ew6ugv8765qPcLS7k3g4xOqKF0tpOY2NDaRXZzF52ultcDKxFN7NugrCrit4C6Bl4twaGkO1
      lVDR0oo9kWLi1nUqK6xY3E1YLTZSaxk0TRMTYrYhJsRs7QBOiAH/apiW1lYmJiYJBgJIJiuG
      JOGubmR4fJyMmqax7ZiYEPMAxISYrR3ACTHgdrlYDUfp638Mu1lmZXmFrr5+Skus9LZLZHQV
      j5gPLBxwBQfAVlJKY8mXd4CprW/YeOx0eXDebyFBOGBEF41Q1EQAhKImAiAUNREAoaiJAAhF
      TQRAKGoiAEJREwEQipoIgFDURACEolbwUAjf4iy+UARneQ3N1aUMDY9hK6vkSHMt02PDJHQz
      vd0dKLK0m/UVhF1V8BagvLqevr4+/ItzjI8MU9/ZRzq8QtA3S0KtoMGpM+2L7mZdBWHXFbwF
      kLQ0V67cQHZUEctG6bKpxEwmAqEgzqp63BaDKW8crapEzAfYhpgPsLUDOR8glspz6szvcfXy
      JTyldryhBKF0miNt9UwsL2E2x6iuOCLmAzwAMR9gawdyPoCeTTI0tEhLVy8VZQ6mJ8epae7E
      6S6jPjFLXPdwxGMvtHhB2BcFB8BTXY+nun7j+ZHOno3HNY2tD1crQdgnohtUKGoiAEJREwEQ
      itqWATC0HGPDt5lf8BJLZferToKwb7Y8CH77n/4XKcmCrlhRqnv5j986vl/1EoR9seUWwGGz
      kUjEuXF7jNqKsv2qkyDsmy0D0Nl/ijJXJadPnaStWgRA+PrZMgAms432zm6UyDxD88H9qpMg
      7JstjwGCfi/j08uEw1HqsuIgWPj6uX8ADAP/ihfF5qa93YHU1U1LW8tDf1g6nebChQtkMhm6
      uro4fvw4P/vZz+jr60OSJBYWFshms/zwhz9ElmUuXrzIysoKtbW1PPXUUw/9+YLwuzbdBZqb
      Hmdmbp6VlRWWvYsEI4m73jcMnXQ6TV7T1x+nUqTTGQzDIJ/Lkc3l+d2xnxaLhe9973v09fUR
      DAYZHh7G4/GQTqfp7+/nueeeI5FIoOs6uq7j9Xr5wz/8QxYWFvbiuwvCJlsASeL0k+cYu/ob
      XvvVbzGh4Wrqpb2hYuNXUok4Kz4/oXCcthoLIz6DKreDBo+F4dkwTiWNvbaTBo9jYxld13n7
      7bfp6enh7Nmz/O3f/i3l5eXMzc1hsVjIZrO8+OKLqKqKYRhIkphMI+ytLY8BLn56hd4Tp+ny
      5Bhbu3sLYHM4MbIz2EpdKBYTNmWV4GoQpyFTXt9DiyXEFe8atS7rxnjuaDTK8vIy6hfDU//q
      r/4Kn8/H6uoqQ0NDlJSUcO3aNVpbW0kkErS2tvLaa6/R0dFRFOPdCyXmA2yzfCHzAbLZDOfO
      /T6y3c6/nb/Asy+fvev9yduDWKqO0FblIptJceJ4HRO3rqHbSohH1ohYorjKau6aD1BZWclf
      /MVf3FVOfX099fX19Pf337cejz/++E6+66Ek5gNs7ZHMB5i48RkfXrqFq6Kab3z7eZqrSu96
      X0NmzTdPIhqmttzO2PgEZkc5NbVNJMeGmc+Y6O0uvafcZCKOoe8syarJhMVq29EygvAgNg1A
      7+lnOHrqG0wPD/K//+f/4NTL/5kfPN238X73scfu+n2Xp3rjcXt3H5u59ulvSSbiO6pkXVMz
      vY+d2tEygvAgNg3Arc/e54PPblNV38Kf/Zef0lxXuZ/1EoR9sWkAek59k76zzyL6YYSvs00D
      8HU+qBKEO8SEGKGoiQAIRU0EQChqIgBCURMBEIqaCIBQ1EQAhKJWcAB0LcfK0hKJdBbDMAgF
      fMSTGcAgHgkTXIveMx9AEA6aggOwtLiApKrcvHadlZlRlqNZbt+8TioW4tbYPCvTI/ij6d2s
      qyDsuoJP99Y3tbK6PIfJ7mQxnODUQA9zqTDz3lmq23ppMYcYXA5R4ai+6/4AhdwjQNeNohjv
      XigxH2Cb5ffi/gDe6RHCmoOTx3sYvn6VlG6Q0XWcdjuRVJq0nsZmK7vn/gCFzPKSZelrPTRD
      zAfY2l7OByh4F8gfDGOkI4xOztDe2cbQ4FUyqoOa+nZygUmGFqJ01LsLLV4Q9kXBq42Bx5+8
      6/np01+O1z8+IMbuC4eD6AYVipoIgFDURACEoiYCIBQ1EQChqIkACEVNBEAoaiIAQlETARCK
      mgiAUNREAISiVnAAEpFVPv34MlkgF/Nx8dMr3B6ZIJ/PcfPaFT6/ep1svrDhq4KwXwoOgGyy
      U+G0oQGhFS+W0nIaGxtIr85i8rTT21DKxFJ4F6sqCLuv4NGgNrudO0P7PS29WJMpJm5dp7LC
      isXdiNViJbWWQdM0MSFmG2JCzNYO5ISYVCJGLJ4gEomiJKNoqhVDknBXNzI8Pk5GzdDYdkxM
      iHkAYkLM1h7JDTK2k0mn8DTUkU8kqayuIeBboauvn9ISK73tMhlDwVNqLbR4QdgXBQfA5anC
      5fnyeU1dw8Zjp6sc50NVSxD2h+gGFYqaCIBQ1EQAhKImAiAUNREAoaiJAAhFTQRAKGoiAEJR
      EwEQipoIgFDUCg5ALp3g1o0hcoCeS3HrxnUmZr0Yhs7k6G1uDo+j6eIWGcLBVnAAkqk0cj5H
      HpgcGaa+s49MeIWgb5akWkGjU2faF93FqgrC7it4MFyZ20PAtARAJGvQYVOJmUwEQkGcVfW4
      LAaT3jhaVYmYD7ANMR9gawdyPsBXVZeY8IYShNJpjrTVM7G8hNkco7riiJgP8ADEfICtHcgb
      ZKwsTBPT8kyOTFDX0UtmdZ6a5k6c7jrqyyBl9tDosRdavCDsi4JXGzWNbdQ0fvn8SGfPl+81
      tD5UpQRhv4huUKGoiQAIRU0EQChqIgBCURMBEIqaCIBQ1EQAhKImAiAUNREAoaiJAAhFbVdG
      UBmGTiadAUnGYjGj5XPoSJhMJnY+9E0Q9l48Huf999/fnS1AKjDNZzcnWFxeIZ+J8dmlq1z7
      /DLhRHY3ihcKFIlEGB8fJ5VKAZDL5fD7/Rvvx+NxxsfHicfjj6qKj4zD4eDFF1/cnS1AIpnD
      ohrkcjox3zw1nSdotQS5sRTCdaQKXdfRNG19PgBiPsDvetjx/IZx//aZmZlBVVVeffVVfvzj
      H/Pee+8xNzfHn//5nwMwOzsLwCuvvMKf/umfFvz5e+1O++h6gfMBNO2+r1+5cmV3AlDR3E1F
      M0zcvEZMNaFrGvm8hqJYkCQJSZKQZRlFUaCAnSJZkr5Y9m5jY2OMjo5itVoZGBjgN7/5DTab
      jeeffx5Y/wNfvnyZ6upqnn76aWT5YB7yfNk2hZE2aZ/GxkbeffddGhsb8fv92Gw23G73xu82
      Nzfzy1/+kpqamof6/L12p31kqcD5APdp30AgQG1t7e7sAgVXFrhx8ybhnExdYweRudtcm/DR
      2Vi+EYCNn0I+QOLeciSJxsZGvv/977OyssKnn37KCy+8AEAoFEKSJIaGhujo6GBgYGBjMs5B
      /AHuelxQE92nzPLycl566SUWFhZ49913CYfDXLt2jbW1NQBKSkp46aWX8Pv9GIaxaf0++eQT
      3nrrLT788ENu3LjB+fPn+Zu/+RsymQySJHHjxg1+8YtfcOnSpT1tn4IPKO9TpsfjYXV1dZe2
      ALVNVNQ2bTw/ffbsbhS7LUVR+Md//EfOnDmD1Wrl/Pnz+Hw+ent78Xg8PP300/h8Pt544w1+
      9KMfYbUWzw07DMPg/fffJ51O09zczDe/+U0Mw8DtdqPrOoODg8RiMaLRKHV1dVuG7/Tp0xiG
      wauvvsq5c+fo6uri/PnzWCwWDMNgZGSEH/3oR7zyyiuc3ae//cNSFIWTJ0/uTgAelTfffJOn
      nnqK8vJyAJ566ik++OADampqmJiYIJ1OU1lZeWB3ffaSLMt8+9vfvus1SZL41re+BYDH47nf
      Yvfl9/u5cOECL7/8MgAff/wxTz75JJIkbWw5DpP81K/Jjf4S2KVu0Efl1KlTLC4u4vf7OXHi
      BKOjo7zwwguoqorT6aS5uZnBwUGef/75olv766HpHS8n2z1INtc9Zb322ms8++yzRCIRSkpK
      8Pv9/MEf/AHhcJjV1VUcDgeXL1/GbDbv1lfYU1pohvz4r4BDHoD29nba29s3np85c2bjcU1N
      DcCh2STvKi1H8h9e3PFilm/8V8wn/+Se1//oj/6IdDq9fl5HknjppZeA9WMIs9lMa2srXq+X
      gYGBh676fju0AUh/8NcYqbUdLaM0P4n52A/3qEZfT5IkUV9ff9drDocDAJPJhMlkAtZ7lA6j
      QxuA/PRHGHHfjpaRbG5g8wDk83kmJyepr6/H6Vy/zV8kEiEYDNLa2nro9nUflp5O4/9v/33H
      y5V+7wXsj5++73vJZJIPP/wQTdOora3dOMD+5JNPyGQyPPPMM/vaJXtoA7AXzp8/T1dXF7FY
      DKfTSTab5c033+TIkSP4fD6eeOKJR13F/aVpZMfHd77Y2pObvme323nhhRe4evXqxnHZ8vIy
      iUSCyspKhoeHOXbsWMFV3qni6x7ZhK7rDA0NMTo6yuLiIoZhEA6HaWho4MyZMywuLj5wWfl8
      nrW1tbuugpfJZIhGowVdGe/rRtd1RkZGOHr0KABLS0u0tLTQ1NTE0tLSvtZl1wOga1kGP7/E
      pctXSOcKO3X9KEiSREtLCy+99BITExMAWCwWstks+Xx+R1dee/XVV/n000+5ePEisD4G5+c/
      /zkffPABQ0NDe1L/w2R4eJienh4kSSIYDFJfX8/09DQzMzM0NjZuX8Au2vUAxP0z2Ot66G/1
      MOEN7Xbxe0aSJLq7u3njjTfo7OzcOKspyzJvvfUWTz311AOVo2kaJpOJ5557bmNt5vf7OXLk
      CM8999xGuIqZxWKhv78fAK/XS2VlJR6Ph1QqRXd3977WZdePAfLZLCa7GZPFTDac2+3i99TJ
      kyc5efLkXa995zvf2VEZd04OffUEkclk2hjMdZDH3OyXjo6OjcfHjx8H1s82Pwq7HoDS6kZG
      rw8RU3I09xz8fuHc4iLGDq86rJQ6Udzu+74nyzIul4vXXnuN/v5+PvnkE/r6+giHw7z11luc
      O3duN6p9qOQyaYY+fm/HyzUdPUF57d7uEu16AFRrGQPHu8gZCiWOg39m0PfTv0bf4Xh45wvP
      4/7jH2/6/v22Gj/8YfGef8hl0lz91es7Xs5e6tq/AGiaVvB469+lmCwoQD63vguUz+e/HM8t
      SUg7HJtjGOsHkl+lqQ50k3NH5UiS+Z5ydJsNfZPx4pvRFOWech6Gpmkb5UmyAjucM3FP+2h5
      8jtsGwAFBekr5Riahm6z7bgcTZbuqo+maSiWnQ9FMVgv50776Lq+4/8dYOPeFBv1Qd1oH8n4
      4p1MJrOrf9SvSiaTWK3Whx6Upuv6rgxsO2jlxONxSkpKDkx9Dlo5e9k+G1sAi8WCxWJ56A+5
      H8MwsNvtD30AqOv6Q4+bv1POQfoD5/N5EYAt7GX7HKozwbs1rPmglbNbDtr3Ogzts681HB4Z
      3vL9UCj4gCXpfPbBrwimdrbvvnWRKT7+6GNu3hoituZjbNZHOhbk4qVBDENjdHS7IQEGvsUZ
      fnvpGgawujTLlcGr3B6bYXZihGROZ2JokLnlIKnVOWYDyXtK2Lp9DEKhBzuvYug5/v29CyR2
      8URkNhni4m8+5ebtUSKrC8z5YkSW57h8ewJDSzE6PrtdrZifGuPz6+vfcWFqhKuDV5mcX2Hk
      i+99/bOLrMbTBBYmWY3fvTseWZ7Au7b5RRayySix1IPtwvvmx/n85vr5mH3dAiQScUj4uHB1
      ljKTQefxPm59dhmH005161HiQT9mPc31iUVMhkbPybOUWu7NaCYawNXUxsL0LPkSHcoayARm
      cFTWMjk2iWSkae09S6XT9MB1y0WDRHIGTZ5KSso8xKduEcaGqiikMwmy+e13u9xV9ZSGEwDM
      LQUYOHmKa1evUllVyupagowmkV0Lkc4nqO+5t3cjkYgT800zOB1Gzud47LEOBgdHsCoG7QNP
      4vf70MLLTEY1yGY4eeoUZuXeesV983gaWlhaCSJHl6npOsbi+DC1NR6GJ71kc1nOnjmDWX3w
      9V8iuEJKUumoqcHhVJiZWCYl57AYBolgAMW+/S5KTWMrkbH1FclKOM7pk6e4cpKtqY0AAARi
      SURBVPUqZSaJtUwWxWLGvxJCj8fobLj7b6dlkqRNBlcv/xaTtQTJVIKaCZGRLeQNhZ5aG2tq
      LWPXPsPscKLa3RztuN8IVYPAWgaTrpHPZx/BWCBdo6apna6WWuKJFOVV9fT3HCGWSJDL5TB0
      nYbWTjqbyokk73+lhLnZOdbW4iwvLVBRW8Oy10s4mSMV9NPee5zWugryO1z5qWX1fPfck8iJ
      FaaXosiSTjiRp73KwezUNKXbdsdJd00IMe5cDABwV1UR8s0jmcqQ9AwpDRz3+ccF0A2D5vYe
      mstKSBoGtY1tHG+vZjWWXe8J0XSOHD1GldtObpMvOTqziJaNMz8zQ2NTNTNTs6Q1mYVFPydP
      D1DjcbLTWzi7Gnp49skBQrNDhPNW9GyCvAHlFokpX4RKj2ubEu5unztzfCWgubWa8dvjOCra
      0NNB8siYN1nfmGyl64Plcmkk1Upv3zEsio6h5cnrBlanm+P9J9Ay979Fr5aJ411aIuL34o3k
      D/pguDzT0/Mkwz5WvlizGoZGyrBx5vRjHGvxsJqxIKW8qPYKXGUlzExNsrDkA3JMTy8AkEus
      seALsbwwzWZbyWR0lcnpWcKxDDarCY8VVjMSFbVV3B5epKF8m248wyCwskQgEGDZH6TcbmJs
      YpKsZMJsLSMyO0JpXT0lZo14zvSQB/LSFx+ZZmZmmcDiPNHM+srC0LOYS6o40T9AnctM3uoh
      4h3FXVVHVZmV4bEplv1BdC3J7Nz6cPJEaBnfWoq5mWk2Oye4FlhmZnaBeFbCalKwG3EyspOK
      ag+z86uUWrfZmTA0lr2LBAIBAqEIVllncmoC2VqKyVlLYG4Id2U55OPI5tKtv/1dTbd5Oy4v
      zJLM6kxPfzk7zr84z4knz/HMs88SnJ/+sht0L8ViMex2O5qmYVYVcrqEIunoSBi6jqrI62ts
      Q0eRJXRkZDR0SSGfzWFSZTRkzKqCYRjkcnnMZhO6lkczZAwtg2yyQj5DJJ5keXacup7T2KU8
      VqsFXcuT00HS86hmK/L92swwSCRiGLIZh92Kkc+R1cBqUUkmU9jt29zx0jCIx6LkNB3FZMbp
      sBGLxrCVODEpMulkErPNhqHlyOsSFvOXm/i1tTVcLhfZbBZVkdGRQdeQFBlDB0XS0VAx9C/W
      WKoJQ8shKzLZrIYiGciqGUWWMAyNXN7AbFLJ53JIiko+m8ZktpJLJ0hkskxOTHBi4BSGpmOx
      mNDyWXRUdC2L2Wzlftk0DJ14LIZqtmG1mtGyaXTZhEmRSKcz2LY7X2DoRKNRNN3AZLHisJqI
      xhKUOEtRJEilUljtdvLZNIZsvmv3bG1tjdISB7q03gYmk0outx54VTWRz+c2/m8MfX0s1p29
      CdVkJpvNbAy9zmWzqGYzEpDNZvc3AHs9DkbXckxPTmApq6ah2nPfP+RBdCcAe03LphifmMJT
      20Slu1S0D4esG3Q7smKivevoo67GgaWYbfT09j3qahwoB/wYQBD21v8H60UaBsCdka0AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Wickets Formats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Runs in Formats' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
